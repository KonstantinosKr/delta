/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.peano.pdt.analysis;

import java.util.*;
import org.peano.pdt.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    public void caseADescription(ADescription node)
    {
        defaultCase(node);
    }

    public void caseARepository(ARepository node)
    {
        defaultCase(node);
    }

    public void caseAVertex(AVertex node)
    {
        defaultCase(node);
    }

    public void caseAReadScalarDoubleOperation(AReadScalarDoubleOperation node)
    {
        defaultCase(node);
    }

    public void caseAReadVectorDoubleOperation(AReadVectorDoubleOperation node)
    {
        defaultCase(node);
    }

    public void caseAReadVectorTwoPowDDoubleOperation(AReadVectorTwoPowDDoubleOperation node)
    {
        defaultCase(node);
    }

    public void caseAReadStencilDoubleOperation(AReadStencilDoubleOperation node)
    {
        defaultCase(node);
    }

    public void caseAReadIntergridOperatorDoubleOperation(AReadIntergridOperatorDoubleOperation node)
    {
        defaultCase(node);
    }

    public void caseAWriteScalarDoubleOperation(AWriteScalarDoubleOperation node)
    {
        defaultCase(node);
    }

    public void caseAWriteVectorDoubleOperation(AWriteVectorDoubleOperation node)
    {
        defaultCase(node);
    }

    public void caseAWriteVectorTwoPowDDoubleOperation(AWriteVectorTwoPowDDoubleOperation node)
    {
        defaultCase(node);
    }

    public void caseAWriteStencilDoubleOperation(AWriteStencilDoubleOperation node)
    {
        defaultCase(node);
    }

    public void caseAWriteIntergridOperatorDoubleOperation(AWriteIntergridOperatorDoubleOperation node)
    {
        defaultCase(node);
    }

    public void caseAReadScalarIntOperation(AReadScalarIntOperation node)
    {
        defaultCase(node);
    }

    public void caseAReadVectorIntOperation(AReadVectorIntOperation node)
    {
        defaultCase(node);
    }

    public void caseAReadVectorTwoPowDIntOperation(AReadVectorTwoPowDIntOperation node)
    {
        defaultCase(node);
    }

    public void caseAReadStencilIntOperation(AReadStencilIntOperation node)
    {
        defaultCase(node);
    }

    public void caseAReadIntergridOperatorIntOperation(AReadIntergridOperatorIntOperation node)
    {
        defaultCase(node);
    }

    public void caseAWriteScalarIntOperation(AWriteScalarIntOperation node)
    {
        defaultCase(node);
    }

    public void caseAWriteVectorIntOperation(AWriteVectorIntOperation node)
    {
        defaultCase(node);
    }

    public void caseAWriteVectorTwoPowDIntOperation(AWriteVectorTwoPowDIntOperation node)
    {
        defaultCase(node);
    }

    public void caseAWriteStencilIntOperation(AWriteStencilIntOperation node)
    {
        defaultCase(node);
    }

    public void caseAWriteIntergridOperatorIntOperation(AWriteIntergridOperatorIntOperation node)
    {
        defaultCase(node);
    }

    public void caseAReadScalarComplexOperation(AReadScalarComplexOperation node)
    {
        defaultCase(node);
    }

    public void caseAReadVectorComplexOperation(AReadVectorComplexOperation node)
    {
        defaultCase(node);
    }

    public void caseAReadVectorTwoPowDComplexOperation(AReadVectorTwoPowDComplexOperation node)
    {
        defaultCase(node);
    }

    public void caseAReadStencilComplexOperation(AReadStencilComplexOperation node)
    {
        defaultCase(node);
    }

    public void caseAReadIntergridOperatorComplexOperation(AReadIntergridOperatorComplexOperation node)
    {
        defaultCase(node);
    }

    public void caseAWriteScalarComplexOperation(AWriteScalarComplexOperation node)
    {
        defaultCase(node);
    }

    public void caseAWriteVectorComplexOperation(AWriteVectorComplexOperation node)
    {
        defaultCase(node);
    }

    public void caseAWriteVectorTwoPowDComplexOperation(AWriteVectorTwoPowDComplexOperation node)
    {
        defaultCase(node);
    }

    public void caseAWriteStencilComplexOperation(AWriteStencilComplexOperation node)
    {
        defaultCase(node);
    }

    public void caseAWriteIntergridOperatorComplexOperation(AWriteIntergridOperatorComplexOperation node)
    {
        defaultCase(node);
    }

    public void caseACell(ACell node)
    {
        defaultCase(node);
    }

    public void caseAState(AState node)
    {
        defaultCase(node);
    }

    public void caseAHeapDastgenFile(AHeapDastgenFile node)
    {
        defaultCase(node);
    }

    public void caseAEventMapping(AEventMapping node)
    {
        defaultCase(node);
    }

    public void caseAAdapter(AAdapter node)
    {
        defaultCase(node);
    }

    public void caseAPredefinedUseMapping(APredefinedUseMapping node)
    {
        defaultCase(node);
    }

    public void caseAUserdefinedUseMapping(AUserdefinedUseMapping node)
    {
        defaultCase(node);
    }

    public void caseTTokenVertex(TTokenVertex node)
    {
        defaultCase(node);
    }

    public void caseTTokenCell(TTokenCell node)
    {
        defaultCase(node);
    }

    public void caseTTokenState(TTokenState node)
    {
        defaultCase(node);
    }

    public void caseTTokenComponent(TTokenComponent node)
    {
        defaultCase(node);
    }

    public void caseTTokenNamespace(TTokenNamespace node)
    {
        defaultCase(node);
    }

    public void caseTTokenHeapDastgenFile(TTokenHeapDastgenFile node)
    {
        defaultCase(node);
    }

    public void caseTTokenRead(TTokenRead node)
    {
        defaultCase(node);
    }

    public void caseTTokenWrite(TTokenWrite node)
    {
        defaultCase(node);
    }

    public void caseTTokenScalarDouble(TTokenScalarDouble node)
    {
        defaultCase(node);
    }

    public void caseTTokenScalarInt(TTokenScalarInt node)
    {
        defaultCase(node);
    }

    public void caseTTokenScalarComplex(TTokenScalarComplex node)
    {
        defaultCase(node);
    }

    public void caseTTokenVectorDDouble(TTokenVectorDDouble node)
    {
        defaultCase(node);
    }

    public void caseTTokenVectorDInt(TTokenVectorDInt node)
    {
        defaultCase(node);
    }

    public void caseTTokenVectorDComplex(TTokenVectorDComplex node)
    {
        defaultCase(node);
    }

    public void caseTTokenVectorTwoPowDDouble(TTokenVectorTwoPowDDouble node)
    {
        defaultCase(node);
    }

    public void caseTTokenVectorTwoPowDInt(TTokenVectorTwoPowDInt node)
    {
        defaultCase(node);
    }

    public void caseTTokenVectorTwoPowDComplex(TTokenVectorTwoPowDComplex node)
    {
        defaultCase(node);
    }

    public void caseTTokenVectorFivePowDDouble(TTokenVectorFivePowDDouble node)
    {
        defaultCase(node);
    }

    public void caseTTokenVectorFivePowDInt(TTokenVectorFivePowDInt node)
    {
        defaultCase(node);
    }

    public void caseTTokenVectorFivePowDComplex(TTokenVectorFivePowDComplex node)
    {
        defaultCase(node);
    }

    public void caseTTokenStencilDouble(TTokenStencilDouble node)
    {
        defaultCase(node);
    }

    public void caseTTokenStencilInt(TTokenStencilInt node)
    {
        defaultCase(node);
    }

    public void caseTTokenStencilComplex(TTokenStencilComplex node)
    {
        defaultCase(node);
    }

    public void caseTTokenName(TTokenName node)
    {
        defaultCase(node);
    }

    public void caseTTokenDastgenFile(TTokenDastgenFile node)
    {
        defaultCase(node);
    }

    public void caseTTokenEventMapping(TTokenEventMapping node)
    {
        defaultCase(node);
    }

    public void caseTTokenOpenBracket(TTokenOpenBracket node)
    {
        defaultCase(node);
    }

    public void caseTTokenCloseBracket(TTokenCloseBracket node)
    {
        defaultCase(node);
    }

    public void caseTTokenComma(TTokenComma node)
    {
        defaultCase(node);
    }

    public void caseTTokenAdapter(TTokenAdapter node)
    {
        defaultCase(node);
    }

    public void caseTTokenMergeWithUserDefinedAdapter(TTokenMergeWithUserDefinedAdapter node)
    {
        defaultCase(node);
    }

    public void caseTTokenMergeWithPredefinedAdapter(TTokenMergeWithPredefinedAdapter node)
    {
        defaultCase(node);
    }

    public void caseTBlank(TBlank node)
    {
        defaultCase(node);
    }

    public void caseTIdentifier(TIdentifier node)
    {
        defaultCase(node);
    }

    public void caseTFilename(TFilename node)
    {
        defaultCase(node);
    }

    public void caseTNamespace(TNamespace node)
    {
        defaultCase(node);
    }

    public void caseTTraditionalComment(TTraditionalComment node)
    {
        defaultCase(node);
    }

    public void caseTDocumentationComment(TDocumentationComment node)
    {
        defaultCase(node);
    }

    public void caseTEndOfLineComment(TEndOfLineComment node)
    {
        defaultCase(node);
    }

    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
