<project name="pdt" basedir=".">

	<!-- define path properties -->
	<property name="src.dir" value="${basedir}/src"/>
	<property name="bin.dir" value="${basedir}/bin"/>
	<property name="dist.dir" value="${basedir}/dist"/>
	<property name="lib.dir" value="${basedir}/lib/"/>

    <!-- cross compiling -->
	<!-- 
	 
	 See remarks in DaStGen build file where this one is copied from.
	
    <property name="ant.build.javac.source" value="1.5"/>
    <property name="ant.build.javac.target" value="1.5"/>
    -->

	<!-- set the path to libraries -->
	<path id="lib.path">
		<fileset dir="${lib.dir}" includes="**/*.jar"/>
	</path>
	
	<!-- define the sablecc task -->
	<taskdef name="sablecc" classname="org.sablecc.ant.taskdef.Sablecc" classpathref="lib.path"/>
	
	<!-- create the directory for binaries -->
	<target name="init">
		<mkdir dir="${bin.dir}"/>
		<mkdir dir="${dist.dir}"/>
	</target>
	
	<target name="clean" description="deletes all binary files">
		<delete dir="${dist.dir}"/>
		<delete dir="${bin.dir}"/>
	</target>
	
	<target name="createParser" description="Reads the file pdt.grammar from ./etc and creates the parser">
		<delete dir="${src.dir}/org/peano/pdt/analysis"/>
		<delete dir="${src.dir}/org/peano/pdt/lexer"/>
		<delete dir="${src.dir}/org/peano/pdt/node"/>
		<delete dir="${src.dir}/org/peano/pdt/parser"/>
		<sablecc src="." outputdirectory="src" includes="pdt.grammar"/>
	</target>
	
	<target name="javadoc" description="Create the javadoc">
	    <delete dir="${javadoc.dir}" quiet="true"/>
	    <mkdir dir="${javadoc.dir}"/>
	    <javadoc
	         packagenames="org.*"
	         sourcepath="${src.dir}"
	         defaultexcludes="yes"
	         destdir="${javadoc.dir}"
	         version="true"
	         use="true"
	    />
	</target>
	
	<target name="compile" depends="init" description="compiles the sources to ./bin">
		<javac  srcdir="${src.dir}"
				destdir="${bin.dir}"
				classpathref="lib.path"
                includeantruntime="true"
		/>
		<!-- copy all created resources (exept .java files) to ./bin -->
		<copy todir="${bin.dir}">
		    <fileset dir="${src.dir}" excludes="**/*.java"/>
		</copy>
	</target>
	
	
	<!-- create the properties file, containing the date of the build. -->
	<target name="buildDateFile" description="create the property file with the build date">
		<propertyfile
		    file="${src.dir}/org/peano/pdt/properties/build-date.properties"
		    comment="This property file contains the build date, which is inserted to the autogenerated code. Please note, that it is autogenerated by Ant">
			<entry key="build-date" value="now" type="date" pattern="dd-MM-yyyy HH:mm"/>
		</propertyfile>
	</target>
	
	
	<!-- create a jar file -->
	<target name="dist" depends="compile" description="Creates a distribution">
		<mkdir dir="${dist.dir}/"/>
		
		<unjar dest="${bin.dir}">
		  <!--<patternset refid="myPattern" /> -->
		  <fileset dir="${lib.dir}" includes="DaStGen.jar" />
          <fileset dir="${lib.dir}" includes="jargs.jar" />
		</unjar>
		
        <!-- copy std templates into bin directory -->
        <mkdir dir="${bin.dir}/stdtemplates"/>
        <copy todir="${bin.dir}/stdtemplates">
           <fileset dir="${basedir}/stdtemplates" includes="*"/>
        </copy>

        	<!-- create jar file -->
		<jar destfile="${dist.dir}/pdt.jar"
          basedir="${bin.dir}"
	      manifest="${basedir}/Manifest.txt"
        >
		  <!-- <fileset dir="${basedir}/stdtemplates" /> -->
		</jar>

        <!-- create zip file -->
	    <zip destfile="${dist.dir}/pdt.zip">
	      <fileset dir="${src.dir}/" includes="org/**/*"/>  
	    </zip>

        <!-- copy jar file -->
        <copy todir="${basedir}">
           <fileset dir="${dist.dir}" includes="pdt.*"/>
        </copy>
    </target>
</project>
