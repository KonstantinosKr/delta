// This file is part of the Peano project. For conditions of distribution and 
// use, please see the copyright notice at www.peano-framework.org
#ifndef ___INCLUDE_GUARD_PREFIX___VERTEX_OPERATIONS_H_ 
#define ___INCLUDE_GUARD_PREFIX___VERTEX_OPERATIONS_H_


#include "__PROJECT_PATH__/Vertex.h"
#include "peano/grid/Vertex.h"
#include "peano/grid/VertexEnumerator.h"
#include "peano/utils/Globals.h"


__OPEN_NAMESPACE__ 
      class VertexOperations; 
__CLOSE_NAMESPACE__


/**
 * This class comprises a collection of static operations on sets of vertices. 
 * It is generated by the Peano Development Toolkit (PDT) and will be 
 * overwritten by every rerun. Thus, do edit neither the class header nor its 
 * implementation. 
 */
class __NAMESPACE__::VertexOperations { 
  private: 
    /**
     * One should not instantiate this class as it is a collection of static operations.
     */
    VertexOperations();
  public:
   __x__READ_SCALAR_OPERATION_DOUBLE__ static tarch::la::Vector<FOUR_POWER_D,double>  readAll__READ_SCALAR_OPERATION_DOUBLE__(const peano::grid::VertexEnumerator& enumerator, const Vertex* const vertices);

   __x__READ_SCALAR_OPERATION_DOUBLE__ static double  read__READ_SCALAR_OPERATION_DOUBLE__(const Vertex& vertex);
   __x__READ_VECTOR_OPERATION_DOUBLE__ static tarch::la::Vector<DIMENSIONS,double> read__READ_VECTOR_OPERATION_DOUBLE__(const Vertex& vertex);
   __x__READ_VECTOR_TWO_POW_D_OPERATION_DOUBLE__ static tarch::la::Vector<TWO_POWER_D,double> read__READ_VECTOR_TWO_POW_D_OPERATION_DOUBLE__(const Vertex& vertex);
   __x__READ_STENCIL_OPERATION_DOUBLE__ static tarch::la::Vector<THREE_POWER_D,double> read__READ_STENCIL_OPERATION_DOUBLE__(const Vertex& vertex);
   __x__READ_INTERGRID_OPERATOR_OPERATION_DOUBLE__ static tarch::la::Vector<FIVE_POWER_D,double> read__READ_INTERGRID_OPERATOR_OPERATION_DOUBLE__(const Vertex& vertex);

   __x__READ_SCALAR_OPERATION_DOUBLE__ static tarch::la::Vector<TWO_POWER_D,double> read__READ_SCALAR_OPERATION_DOUBLE__(const peano::grid::VertexEnumerator& enumerator, const Vertex* const vertices);
   __x__READ_VECTOR_OPERATION_DOUBLE__ static tarch::la::Vector<TWO_POWER_D_TIMES_D,double> read__READ_VECTOR_OPERATION_DOUBLE__(const peano::grid::VertexEnumerator& enumerator, const Vertex* const vertices);
   __x__READ_VECTOR_TWO_POW_D_OPERATION_DOUBLE__ static tarch::la::Vector<TWO_POWER_D_TIMES_TWO_POWER_D,double> read__READ_VECTOR_TWO_POW_D_OPERATION_DOUBLE__(const peano::grid::VertexEnumerator& enumerator, const Vertex* const vertices);
   __x__READ_STENCIL_OPERATION_DOUBLE__ static tarch::la::Vector<TWO_POWER_D_TIMES_THREE_POWER_D,double> read__READ_STENCIL_OPERATION_DOUBLE__(const peano::grid::VertexEnumerator& enumerator, const Vertex* const vertices);
   __x__READ_INTERGRID_OPERATOR_OPERATION_DOUBLE__ static tarch::la::Vector<TWO_POWER_D_TIMES_FIVE_POWER_D,double> read__READ_INTERGRID_OPERATOR_OPERATION_DOUBLE__(const peano::grid::VertexEnumerator& enumerator, const Vertex* const vertices);


   __x__WRITE_SCALAR_OPERATION_DOUBLE__ static void writeAll__WRITE_SCALAR_OPERATION_DOUBLE__(const peano::grid::VertexEnumerator& enumerator, Vertex* const vertices, const tarch::la::Vector<FOUR_POWER_D,double>& values );

   __x__WRITE_SCALAR_OPERATION_DOUBLE__ static void write__WRITE_SCALAR_OPERATION_DOUBLE__(const peano::grid::VertexEnumerator& enumerator, Vertex* const vertices, const tarch::la::Vector<TWO_POWER_D,double>& values );
   __x__WRITE_VECTOR_OPERATION_DOUBLE__ static void write__WRITE_VECTOR_OPERATION_DOUBLE__(const peano::grid::VertexEnumerator& enumerator, Vertex* const vertices, const tarch::la::Vector<TWO_POWER_D_TIMES_D,double>& values);
   __x__WRITE_VECTOR_TWO_POW_D_OPERATION_DOUBLE__ static void write__WRITE_VECTOR_TWO_POW_D_OPERATION_DOUBLE__(const peano::grid::VertexEnumerator& enumerator, Vertex* const vertices, const tarch::la::Vector<TWO_POWER_D_TIMES_TWO_POWER_D,double>& values);
   __x__WRITE_STENCIL_OPERATION_DOUBLE__ static void write__WRITE_STENCIL_OPERATION_DOUBLE__(const peano::grid::VertexEnumerator& enumerator, Vertex* const vertices, const tarch::la::Vector<TWO_POWER_D_TIMES_THREE_POWER_D,double>& values);
   __x__WRITE_INTERGRID_OPERATOR_OPERATION_DOUBLE__ static void write__WRITE_INTERGRID_OPERATOR_OPERATION_DOUBLE__(const peano::grid::VertexEnumerator& enumerator, Vertex* const vertices, const tarch::la::Vector<TWO_POWER_D_TIMES_FIVE_POWER_D,double>& values);

   __x__WRITE_SCALAR_OPERATION_DOUBLE__ static void write__WRITE_SCALAR_OPERATION_DOUBLE__(Vertex&  vertex,  const double& values );
   __x__WRITE_VECTOR_OPERATION_DOUBLE__ static void write__WRITE_VECTOR_OPERATION_DOUBLE__(Vertex&  vertex, const tarch::la::Vector<DIMENSIONS,double>& values);
   __x__WRITE_VECTOR_TWO_POW_D_OPERATION_DOUBLE__ static void write__WRITE_VECTOR_TWO_POW_D_OPERATION_DOUBLE__(Vertex&  vertex, const tarch::la::Vector<TWO_POWER_D,double>& values);
   __x__WRITE_STENCIL_OPERATION_DOUBLE__ static void write__WRITE_STENCIL_OPERATION_DOUBLE__(Vertex&  vertex, const tarch::la::Vector<THREE_POWER_D,double>& values);
   __x__WRITE_INTERGRID_OPERATOR_OPERATION_DOUBLE__ static void write__WRITE_INTERGRID_OPERATOR_OPERATION_DOUBLE__(Vertex&  vertex, const tarch::la::Vector<FIVE_POWER_D,double>& values);

    
   __x__READ_SCALAR_OPERATION_INT__ static tarch::la::Vector<FOUR_POWER_D,int>  readAll__READ_SCALAR_OPERATION_INT__(const peano::grid::VertexEnumerator& enumerator, const Vertex* const vertices);

   __x__READ_SCALAR_OPERATION_INT__ static int  read__READ_SCALAR_OPERATION_INT__(const Vertex& vertex);
   __x__READ_VECTOR_OPERATION_INT__ static tarch::la::Vector<DIMENSIONS,int> read__READ_VECTOR_OPERATION_INT__(const Vertex& vertex);
   __x__READ_VECTOR_TWO_POW_D_OPERATION_INT__ static tarch::la::Vector<TWO_POWER_D,int> read__READ_VECTOR_TWO_POW_D_OPERATION_INT__(const Vertex& vertex);
   __x__READ_STENCIL_OPERATION_INT__ static tarch::la::Vector<THREE_POWER_D,int> read__READ_STENCIL_OPERATION_INT__(const Vertex& vertex);
   __x__READ_INTERGRID_OPERATOR_OPERATION_INT__ static tarch::la::Vector<FIVE_POWER_D,int> read__READ_INTERGRID_OPERATOR_OPERATION_INT__(const Vertex& vertex);

   __x__READ_SCALAR_OPERATION_INT__ static tarch::la::Vector<TWO_POWER_D,int>  read__READ_SCALAR_OPERATION_INT__(const peano::grid::VertexEnumerator& enumerator, const Vertex* const vertices);
   __x__READ_VECTOR_OPERATION_INT__ static tarch::la::Vector<TWO_POWER_D_TIMES_D,int> read__READ_VECTOR_OPERATION_INT__(const peano::grid::VertexEnumerator& enumerator, const Vertex* const vertices);
   __x__READ_VECTOR_TWO_POW_D_OPERATION_INT__ static tarch::la::Vector<TWO_POWER_D_TIMES_TWO_POWER_D,int> read__READ_VECTOR_TWO_POW_D_OPERATION_INT__(const peano::grid::VertexEnumerator& enumerator, const Vertex* const vertices);
   __x__READ_STENCIL_OPERATION_INT__ static tarch::la::Vector<TWO_POWER_D_TIMES_THREE_POWER_D,int> read__READ_STENCIL_OPERATION_INT__(const peano::grid::VertexEnumerator& enumerator, const Vertex* const vertices);
   __x__READ_INTERGRID_OPERATOR_OPERATION_INT__ static tarch::la::Vector<TWO_POWER_D_TIMES_FIVE_POWER_D,int> read__READ_INTERGRID_OPERATOR_OPERATION_INT__(const peano::grid::VertexEnumerator& enumerator, const Vertex* const vertices);


   __x__WRITE_SCALAR_OPERATION_INT__ static void writeAll__WRITE_SCALAR_OPERATION_INT__(const peano::grid::VertexEnumerator& enumerator, Vertex* const vertices, const tarch::la::Vector<FOUR_POWER_D,int>& values );

   __x__WRITE_SCALAR_OPERATION_INT__ static void write__WRITE_SCALAR_OPERATION_INT__(const peano::grid::VertexEnumerator& enumerator, Vertex* const vertices, const tarch::la::Vector<TWO_POWER_D,int>& values );
   __x__WRITE_VECTOR_OPERATION_INT__ static void write__WRITE_VECTOR_OPERATION_INT__(const peano::grid::VertexEnumerator& enumerator, Vertex* const vertices, const tarch::la::Vector<TWO_POWER_D_TIMES_D,int>& values);
   __x__WRITE_VECTOR_TWO_POW_D_OPERATION_INT__ static void write__WRITE_VECTOR_TWO_POW_D_OPERATION_INT__(const peano::grid::VertexEnumerator& enumerator, Vertex* const vertices, const tarch::la::Vector<TWO_POWER_D_TIMES_TWO_POWER_D,int>& values);
   __x__WRITE_STENCIL_OPERATION_INT__ static void write__WRITE_STENCIL_OPERATION_INT__(const peano::grid::VertexEnumerator& enumerator, Vertex* const vertices, const tarch::la::Vector<TWO_POWER_D_TIMES_THREE_POWER_D,int>& values);
   __x__WRITE_INTERGRID_OPERATOR_OPERATION_INT__ static void write__WRITE_INTERGRID_OPERATOR_OPERATION_INT__(const peano::grid::VertexEnumerator& enumerator, Vertex* const vertices, const tarch::la::Vector<TWO_POWER_D_TIMES_FIVE_POWER_D,int>& values);

   __x__WRITE_SCALAR_OPERATION_INT__ static void write__WRITE_SCALAR_OPERATION_INT__(Vertex&  vertex, const int& values );
   __x__WRITE_VECTOR_OPERATION_INT__ static void write__WRITE_VECTOR_OPERATION_INT__(Vertex&  vertex, const tarch::la::Vector<DIMENSIONS,int>& values);
   __x__WRITE_VECTOR_TWO_POW_D_OPERATION_INT__ static void write__WRITE_VECTOR_TWO_POW_D_OPERATION_INT__(Vertex&  vertex, const tarch::la::Vector<TWO_POWER_D,int>& values);
   __x__WRITE_STENCIL_OPERATION_INT__ static void write__WRITE_STENCIL_OPERATION_INT__(Vertex&  vertex, const tarch::la::Vector<THREE_POWER_D,int>& values);
   __x__WRITE_INTERGRID_OPERATOR_OPERATION_INT__ static void write__WRITE_INTERGRID_OPERATOR_OPERATION_INT__(Vertex&  vertex, const tarch::la::Vector<FIVE_POWER_D,int>& values);


   __x__READ_SCALAR_OPERATION_COMPLEX__ static tarch::la::Vector<FOUR_POWER_D,std::complex<double> >  readAll__READ_SCALAR_OPERATION_COMPLEX__(const peano::grid::VertexEnumerator& enumerator, const Vertex* const vertices);

   __x__READ_SCALAR_OPERATION_COMPLEX__ static std::complex<double>  read__READ_SCALAR_OPERATION_COMPLEX__(const Vertex& vertex);
   __x__READ_VECTOR_OPERATION_COMPLEX__ static tarch::la::Vector<DIMENSIONS,std::complex<double> > read__READ_VECTOR_OPERATION_COMPLEX__(const Vertex& vertex);
   __x__READ_VECTOR_TWO_POW_D_OPERATION_COMPLEX__ static tarch::la::Vector<TIMES_TWO_POWER_D,std::complex<double> > read__READ_VECTOR_TWO_POW_D_OPERATION_COMPLEX__(const Vertex& vertex);
   __x__READ_STENCIL_OPERATION_COMPLEX__ static tarch::la::Vector<THREE_POWER_D,std::complex<double> > read__READ_STENCIL_OPERATION_COMPLEX__(const Vertex& vertex);
   __x__READ_INTERGRID_OPERATOR_OPERATION_COMPLEX__ static tarch::la::Vector<FIVE_POWER_D,std::complex<double> > read__READ_INTERGRID_OPERATOR_OPERATION_COMPLEX__(const Vertex& vertex);

   __x__READ_SCALAR_OPERATION_COMPLEX__ static tarch::la::Vector<TWO_POWER_D,std::complex<double> >  read__READ_SCALAR_OPERATION_COMPLEX__(const peano::grid::VertexEnumerator& enumerator, const Vertex* const vertices);
   __x__READ_VECTOR_OPERATION_COMPLEX__ static tarch::la::Vector<TWO_POWER_D_TIMES_D,std::complex<double> > read__READ_VECTOR_OPERATION_COMPLEX__(const peano::grid::VertexEnumerator& enumerator, const Vertex* const vertices);
   __x__READ_VECTOR_TWO_POW_D_OPERATION_COMPLEX__ static tarch::la::Vector<TWO_POWER_D_TIMES_TWO_POWER_D,std::complex<double> > read__READ_VECTOR_TWO_POW_D_OPERATION_COMPLEX__(const peano::grid::VertexEnumerator& enumerator, const Vertex* const vertices);
   __x__READ_STENCIL_OPERATION_COMPLEX__ static tarch::la::Vector<TWO_POWER_D_TIMES_THREE_POWER_D,std::complex<double> > read__READ_STENCIL_OPERATION_COMPLEX__(const peano::grid::VertexEnumerator& enumerator, const Vertex* const vertices);
   __x__READ_INTERGRID_OPERATOR_OPERATION_COMPLEX__ static tarch::la::Vector<TWO_POWER_D_TIMES_FIVE_POWER_D,std::complex<double> > read__READ_INTERGRID_OPERATOR_OPERATION_COMPLEX__(const peano::grid::VertexEnumerator& enumerator, const Vertex* const vertices);


   __x__WRITE_SCALAR_OPERATION_COMPLEX__ static void writeAll__WRITE_SCALAR_OPERATION_COMPLEX__(const peano::grid::VertexEnumerator& enumerator, Vertex* const vertices, const tarch::la::Vector<FOUR_POWER_D,std::complex<double> >& values );

   __x__WRITE_SCALAR_OPERATION_COMPLEX__ static void write__WRITE_SCALAR_OPERATION_COMPLEX__(const peano::grid::VertexEnumerator& enumerator, Vertex* const vertices, const tarch::la::Vector<TWO_POWER_D,std::complex<double> >& values );
   __x__WRITE_VECTOR_OPERATION_COMPLEX__ static void write__WRITE_VECTOR_OPERATION_COMPLEX__(const peano::grid::VertexEnumerator& enumerator, Vertex* const vertices, const tarch::la::Vector<TWO_POWER_D_TIMES_D,std::complex<double> >& values);
   __x__WRITE_VECTOR_TWO_POW_D_OPERATION_COMPLEX__ static void write__WRITE_VECTOR_TWO_POW_D_OPERATION_COMPLEX__(const peano::grid::VertexEnumerator& enumerator, Vertex* const vertices, const tarch::la::Vector<TWO_POWER_D_TIMES_TWO_POWER_D,std::complex<double> >& values);
   __x__WRITE_STENCIL_OPERATION_COMPLEX__ static void write__WRITE_STENCIL_OPERATION_COMPLEX__(const peano::grid::VertexEnumerator& enumerator, Vertex* const vertices, const tarch::la::Vector<TWO_POWER_D_TIMES_THREE_POWER_D,std::complex<double> >& values);
   __x__WRITE_INTERGRID_OPERATOR_OPERATION_COMPLEX__ static void write__WRITE_INTERGRID_OPERATOR_OPERATION_COMPLEX__(const peano::grid::VertexEnumerator& enumerator, Vertex* const vertices, const tarch::la::Vector<TWO_POWER_D_TIMES_FIVE_POWER_D,std::complex<double> >& values);

   __x__WRITE_SCALAR_OPERATION_COMPLEX__ static void write__WRITE_SCALAR_OPERATION_COMPLEX__(Vertex&  vertex, const std::complex<double>& value );
   __x__WRITE_VECTOR_OPERATION_COMPLEX__ static void write__WRITE_VECTOR_OPERATION_COMPLEX__(Vertex&  vertex, const tarch::la::Vector<DIMENSIONS,std::complex<double> >& values);
   __x__WRITE_VECTOR_TWO_POW_D_OPERATION_COMPLEX__ static void write__WRITE_VECTOR_TWO_POW_D_OPERATION_COMPLEX__(Vertex&  vertex, const tarch::la::Vector<TWO_POWER_D_TIMES_TWO_POWER_D,std::complex<double> >& values);
   __x__WRITE_STENCIL_OPERATION_COMPLEX__ static void write__WRITE_STENCIL_OPERATION_COMPLEX__(Vertex&  vertex, const tarch::la::Vector<TWO_POWER_D_TIMES_THREE_POWER_D,std::complex<double> >& values);
   __x__WRITE_INTERGRID_OPERATOR_OPERATION_COMPLEX__ static void write__WRITE_INTERGRID_OPERATOR_OPERATION_COMPLEX__(Vertex&  vertex, const tarch::la::Vector<FIVE_POWER_D,std::complex<double> >& values);
};


#endif
