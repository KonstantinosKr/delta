Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

  WHOLE PROGRAM (SAFE) [EITHER METHOD]: false
  WHOLE PROGRAM (SEEN) [TABLE METHOD]: false
  WHOLE PROGRAM (READ) [OBJECT READER METHOD]: false

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: disabled
  -inline-max-per-compile: disabled

In the inlining report below:
   "sz" refers to the "size" of the routine. The smaller a routine's size,
      the more likely it is to be inlined.
   "isz" refers to the "inlined size" of the routine. This is the amount
      the calling routine will grow if the called routine is inlined into it.
      The compiler generally limits the amount a routine can grow by having
      routines inlined into it.

Begin optimization report for: delta::hull::map_rotate_l(delta::hull::MAP **, delta::hull::MAP *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (delta::hull::map_rotate_l(delta::hull::MAP **, delta::hull::MAP *)) delta/hull/map.cpp(35,1)

===========================================================================

Begin optimization report for: delta::hull::map_rotate_r(delta::hull::MAP **, delta::hull::MAP *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (delta::hull::map_rotate_r(delta::hull::MAP **, delta::hull::MAP *)) delta/hull/map.cpp(52,1)

===========================================================================

Begin optimization report for: delta::hull::map_delete_fixup(delta::hull::MAP **, delta::hull::MAP *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (delta::hull::map_delete_fixup(delta::hull::MAP **, delta::hull::MAP *)) delta/hull/map.cpp(69,1)

===========================================================================

Begin optimization report for: delta::hull::item(delta::hull::MEM *, void *, void *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (delta::hull::item(delta::hull::MEM *, void *, void *)) delta/hull/map.cpp(158,1)

===========================================================================

Begin optimization report for: delta::hull::MAP_Insert(delta::hull::MEM *, delta::hull::MAP **, void *, void *, delta::hull::MAP_Compare)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (delta::hull::MAP_Insert(delta::hull::MEM *, delta::hull::MAP **, void *, void *, delta::hull::MAP_Compare)) [5/16=31.2%] delta/hull/map.cpp(177,1)
  -> INLINE (MANUAL): (183,19) delta::hull::item(delta::hull::MEM *, void *, void *) (isz = 19) (sz = 30)
    -> EXTERN: (162,16) delta::hull::MEM_Alloc(delta::hull::MEM *)
    -> EXTERN: (165,16) delta::hull::MEM_CALLOC(size_t)
  -> INDIRECT-: (193,8) 
     [[ Callee not marked with inlining pragma  <1>]]
  -> INLINE (MANUAL): (198,10) delta::hull::item(delta::hull::MEM *, void *, void *) (isz = 19) (sz = 30)
    -> EXTERN: (162,16) delta::hull::MEM_Alloc(delta::hull::MEM *)
    -> EXTERN: (165,16) delta::hull::MEM_CALLOC(size_t)
  -> INLINE (MANUAL): (209,10) delta::hull::item(delta::hull::MEM *, void *, void *) (isz = 19) (sz = 30)
    -> EXTERN: (162,16) delta::hull::MEM_Alloc(delta::hull::MEM *)
    -> EXTERN: (165,16) delta::hull::MEM_CALLOC(size_t)
  -> INLINE (MANUAL): (227,10) delta::hull::item(delta::hull::MEM *, void *, void *) (isz = 19) (sz = 30)
    -> EXTERN: (162,16) delta::hull::MEM_Alloc(delta::hull::MEM *)
    -> EXTERN: (165,16) delta::hull::MEM_CALLOC(size_t)
  -> INLINE (MANUAL): (238,10) delta::hull::item(delta::hull::MEM *, void *, void *) (isz = 19) (sz = 30)
    -> EXTERN: (162,16) delta::hull::MEM_Alloc(delta::hull::MEM *)
    -> EXTERN: (165,16) delta::hull::MEM_CALLOC(size_t)
  -> INLINE (MANUAL): (269,4) delta::hull::map_rotate_l(delta::hull::MAP **, delta::hull::MAP *) (isz = 37) (sz = 44)
  -> INLINE (MANUAL): (274,9) delta::hull::map_rotate_r(delta::hull::MAP **, delta::hull::MAP *) (isz = 37) (sz = 44)
  -> INLINE (MANUAL): (292,11) delta::hull::map_rotate_r(delta::hull::MAP **, delta::hull::MAP *) (isz = 37) (sz = 44)
  -> INLINE (MANUAL): (296,9) delta::hull::map_rotate_l(delta::hull::MAP **, delta::hull::MAP *) (isz = 37) (sz = 44)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at delta/hull/map.cpp(189,5)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at delta/hull/map.cpp(189,5)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at delta/hull/map.cpp(252,3)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: delta::hull::MAP_Find(delta::hull::MAP *, void *, delta::hull::MAP_Compare)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (delta::hull::MAP_Find(delta::hull::MAP *, void *, delta::hull::MAP_Compare)) [6/16=37.5%] delta/hull/map.cpp(306,1)
  -> INDIRECT-: (314,13) 
     [[ Callee not marked with inlining pragma  <1>]]


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at delta/hull/map.cpp(312,5)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at delta/hull/map.cpp(322,5)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: delta::hull::MAP_Find_Node(delta::hull::MAP *, void *, delta::hull::MAP_Compare)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (delta::hull::MAP_Find_Node(delta::hull::MAP *, void *, delta::hull::MAP_Compare)) [7/16=43.8%] delta/hull/map.cpp(334,1)
  -> INDIRECT-: (342,13) 
     [[ Callee not marked with inlining pragma  <1>]]


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at delta/hull/map.cpp(340,5)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at delta/hull/map.cpp(350,5)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: delta::hull::MAP_Delete(delta::hull::MEM *, delta::hull::MAP **, void *, delta::hull::MAP_Compare)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (delta::hull::MAP_Delete(delta::hull::MEM *, delta::hull::MAP **, void *, delta::hull::MAP_Compare)) [8/16=50.0%] delta/hull/map.cpp(362,1)
  -> INDIRECT-: (371,13) 
     [[ Callee not marked with inlining pragma  <1>]]
  -> INLINE (MANUAL): (427,5) delta::hull::map_delete_fixup(delta::hull::MAP **, delta::hull::MAP *) (isz = 371) (sz = 378)
    -> INLINE (MANUAL): (82,9) delta::hull::map_rotate_l(delta::hull::MAP **, delta::hull::MAP *) (isz = 37) (sz = 44)
    -> INLINE (MANUAL): (97,4) delta::hull::map_rotate_r(delta::hull::MAP **, delta::hull::MAP *) (isz = 37) (sz = 44)
    -> INLINE (MANUAL): (104,2) delta::hull::map_rotate_l(delta::hull::MAP **, delta::hull::MAP *) (isz = 37) (sz = 44)
    -> INLINE (MANUAL): (117,9) delta::hull::map_rotate_r(delta::hull::MAP **, delta::hull::MAP *) (isz = 37) (sz = 44)
    -> INLINE (MANUAL): (132,4) delta::hull::map_rotate_l(delta::hull::MAP **, delta::hull::MAP *) (isz = 37) (sz = 44)
    -> INLINE (MANUAL): (139,2) delta::hull::map_rotate_r(delta::hull::MAP **, delta::hull::MAP *) (isz = 37) (sz = 44)
  -> EXTERN: (429,13) delta::hull::MEM_Free(delta::hull::MEM *, void *)
  -> EXTERN: (430,8) free(void *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at delta/hull/map.cpp(369,5)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at delta/hull/map.cpp(383,5)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at delta/hull/map.cpp(404,5)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at delta/hull/map.cpp(72,3) inlined into delta/hull/map.cpp(427,5)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: delta::hull::MAP_Delete_Node(delta::hull::MEM *, delta::hull::MAP **, delta::hull::MAP *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (delta::hull::MAP_Delete_Node(delta::hull::MEM *, delta::hull::MAP **, delta::hull::MAP *)) [9/16=56.2%] delta/hull/map.cpp(436,1)
  -> INLINE: (439,10) delta::hull::MAP_Next(delta::hull::MAP *) (isz = 53) (sz = 65)
  -> INLINE (MANUAL): (472,5) delta::hull::map_delete_fixup(delta::hull::MAP **, delta::hull::MAP *) (isz = 371) (sz = 378)
    -> INLINE (MANUAL): (82,9) delta::hull::map_rotate_l(delta::hull::MAP **, delta::hull::MAP *) (isz = 37) (sz = 44)
    -> INLINE (MANUAL): (97,4) delta::hull::map_rotate_r(delta::hull::MAP **, delta::hull::MAP *) (isz = 37) (sz = 44)
    -> INLINE (MANUAL): (104,2) delta::hull::map_rotate_l(delta::hull::MAP **, delta::hull::MAP *) (isz = 37) (sz = 44)
    -> INLINE (MANUAL): (117,9) delta::hull::map_rotate_r(delta::hull::MAP **, delta::hull::MAP *) (isz = 37) (sz = 44)
    -> INLINE (MANUAL): (132,4) delta::hull::map_rotate_l(delta::hull::MAP **, delta::hull::MAP *) (isz = 37) (sz = 44)
    -> INLINE (MANUAL): (139,2) delta::hull::map_rotate_r(delta::hull::MAP **, delta::hull::MAP *) (isz = 37) (sz = 44)
  -> EXTERN: (474,13) delta::hull::MEM_Free(delta::hull::MEM *, void *)
  -> EXTERN: (475,8) free(void *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at delta/hull/map.cpp(572,5) inlined into delta/hull/map.cpp(439,10)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at delta/hull/map.cpp(561,5) inlined into delta/hull/map.cpp(439,10)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at delta/hull/map.cpp(448,5)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at delta/hull/map.cpp(72,3) inlined into delta/hull/map.cpp(472,5)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: delta::hull::MAP_Free(delta::hull::MEM *, delta::hull::MAP **)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (delta::hull::MAP_Free(delta::hull::MEM *, delta::hull::MAP **)) [10/16=62.5%] delta/hull/map.cpp(481,1)
  -> (483,3) delta::hull::MAP_Free(delta::hull::MEM *, delta::hull::MAP **) (isz = 29) (sz = 37)
     [[ Callee not marked with inlining pragma  <1>]]
  -> (484,3) delta::hull::MAP_Free(delta::hull::MEM *, delta::hull::MAP **) (isz = 29) (sz = 37)
     [[ Callee not marked with inlining pragma  <1>]]
  -> EXTERN: (485,13) delta::hull::MEM_Free(delta::hull::MEM *, void *)
  -> EXTERN: (486,8) free(void *)

===========================================================================

Begin optimization report for: delta::hull::MAP_Size(delta::hull::MAP *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (delta::hull::MAP_Size(delta::hull::MAP *)) [11/16=68.8%] delta/hull/map.cpp(491,1)
  -> INLINE: (493,3) delta::hull::map_size(delta::hull::MAP *, int *) (isz = 14) (sz = 21)
    -> (151,5) delta::hull::map_size(delta::hull::MAP *, int *) (isz = 14) (sz = 21)
       [[ Callee not marked with inlining pragma  <1>]]
    -> (153,5) delta::hull::map_size(delta::hull::MAP *, int *) (isz = 14) (sz = 21)
       [[ Callee not marked with inlining pragma  <1>]]

===========================================================================

Begin optimization report for: delta::hull::map_size(delta::hull::MAP *, int *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (delta::hull::map_size(delta::hull::MAP *, int *)) [12/16=75.0%] delta/hull/map.cpp(148,1)
  -> (151,5) delta::hull::map_size(delta::hull::MAP *, int *) (isz = 14) (sz = 21)
     [[ Callee not marked with inlining pragma  <1>]]
  -> (153,5) delta::hull::map_size(delta::hull::MAP *, int *) (isz = 14) (sz = 21)
     [[ Callee not marked with inlining pragma  <1>]]


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at delta/hull/map.cpp(148,1)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: delta::hull::MAP_First(delta::hull::MAP *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (delta::hull::MAP_First(delta::hull::MAP *)) [13/16=81.2%] delta/hull/map.cpp(498,1)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at delta/hull/map.cpp(500,3)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form
   remark #25478: While Loop Unrolled by 8  
LOOP END
===========================================================================

Begin optimization report for: delta::hull::MAP_Last(delta::hull::MAP *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (delta::hull::MAP_Last(delta::hull::MAP *)) [14/16=87.5%] delta/hull/map.cpp(505,1)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at delta/hull/map.cpp(508,3)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form
   remark #25478: While Loop Unrolled by 8  
LOOP END
===========================================================================

Begin optimization report for: delta::hull::MAP_Prev(delta::hull::MAP *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (delta::hull::MAP_Prev(delta::hull::MAP *)) [15/16=93.8%] delta/hull/map.cpp(513,1)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at delta/hull/map.cpp(539,5)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at delta/hull/map.cpp(528,5)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: delta::hull::MAP_Next(delta::hull::MAP *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (delta::hull::MAP_Next(delta::hull::MAP *)) [16/16=100.0%] delta/hull/map.cpp(546,1)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at delta/hull/map.cpp(572,5)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at delta/hull/map.cpp(561,5)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

    Report from: Interprocedural optimizations [ipo]

INLINING FOOTNOTES:

<1> The compiler's heuristics indicate that the function is not profitable to 
    inline.  Override this decision by adding "inline 
    __attribute__((always_inline))" to the declaration of the called function, 
    or add "#pragma forceinline" before the call site.

