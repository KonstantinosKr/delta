Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

  WHOLE PROGRAM (SAFE) [EITHER METHOD]: false
  WHOLE PROGRAM (SEEN) [TABLE METHOD]: false
  WHOLE PROGRAM (READ) [OBJECT READER METHOD]: false

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: disabled
  -inline-max-per-compile: disabled

In the inlining report below:
   "sz" refers to the "size" of the routine. The smaller a routine's size,
      the more likely it is to be inlined.
   "isz" refers to the "inlined size" of the routine. This is the amount
      the calling routine will grow if the called routine is inlined into it.
      The compiler generally limits the amount a routine can grow by having
      routines inlined into it.

Begin optimization report for: operator new(size_t, void *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (operator new(size_t, void *)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/new(157,89)

===========================================================================

Begin optimization report for: minimal_support_point(double *, int, double *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (minimal_support_point(double *, int, double *)) delta/collision/gjk.cpp(144,1)

===========================================================================

Begin optimization report for: maximal_support_point(double *, int, double *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (maximal_support_point(double *, int, double *)) delta/collision/gjk.cpp(158,1)

===========================================================================

Begin optimization report for: output_point(point *, int, double (*)[3], short)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (output_point(point *, int, double (*)[3], short)) delta/collision/gjk.cpp(172,1)

===========================================================================

Begin optimization report for: minimal_sphere_support_point(point *, int, double (*)[3], double *, double, double *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (minimal_sphere_support_point(point *, int, double (*)[3], double *, double, double *)) delta/collision/gjk.cpp(200,1)

===========================================================================

Begin optimization report for: maximal_sphere_support_point(point *, int, double (*)[3], double *, double, double *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (maximal_sphere_support_point(point *, int, double (*)[3], double *, double, double *)) delta/collision/gjk.cpp(213,1)

===========================================================================

Begin optimization report for: minimal_ellip_support_point(point *, int, double (*)[3], double *, double *, double *, double *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (minimal_ellip_support_point(point *, int, double (*)[3], double *, double *, double *, double *)) delta/collision/gjk.cpp(226,1)

===========================================================================

Begin optimization report for: maximal_ellip_support_point(point *, int, double (*)[3], double *, double *, double *, double *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (maximal_ellip_support_point(point *, int, double (*)[3], double *, double *, double *, double *)) delta/collision/gjk.cpp(262,1)

===========================================================================

Begin optimization report for: gjk_convex_sphere(double *, int, double *, double, double *, double *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (gjk_convex_sphere(double *, int, double *, double, double *, double *)) [9/115=7.8%] delta/collision/gjk.cpp(464,1)
  -> INLINE (MANUAL): (485,14) minimal_support_point(double *, int, double *) (isz = 29) (sz = 40)
  -> INLINE (MANUAL): (486,14) maximal_sphere_support_point(point *, int, double (*)[3], double *, double, double *) (isz = 128) (sz = 145)
    -> INLINE (MANUAL): (214,17) output_point(point *, int, double (*)[3], short) (isz = 41) (sz = 54)
  -> (493,11) project(point *, int, double *, double *) (isz = 337) (sz = 352)
     [[ Inlining would exceed -inline-max-size value (352>230) <1>]]


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at delta/collision/gjk.cpp(483,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at delta/collision/gjk.cpp(147,3) inlined into delta/collision/gjk.cpp(485,14)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization   [ delta/collision/gjk.cpp(150,38) ]
      remark #15346: vector dependence: assumed ANTI dependence between _dot line 150 and _dot line 149   [ delta/collision/gjk.cpp(150,38) ]
      remark #15346: vector dependence: assumed FLOW dependence between _dot line 149 and _dot line 150   [ delta/collision/gjk.cpp(150,38) ]
      remark #15346: vector dependence: assumed FLOW dependence between _dot line 149 and _dot line 150   [ delta/collision/gjk.cpp(150,38) ]
   LOOP END

   LOOP BEGIN at delta/collision/gjk.cpp(178,3) inlined into delta/collision/gjk.cpp(486,14)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria

      LOOP BEGIN at delta/collision/gjk.cpp(180,5) inlined into delta/collision/gjk.cpp(486,14)
         remark #15524: loop was not vectorized: search loop cannot be vectorized unless all memory references can be aligned vector load. 
         remark #15305: vectorization support: vector length 2
         remark #15460: masked strided loads: 1 
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at delta/collision/gjk.cpp(502,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between p line 504 and q line 505
   remark #15346: vector dependence: assumed OUTPUT dependence between q line 505 and p line 504
   remark #25015: Estimate of max trip count of loop=4
LOOP END
===========================================================================

Begin optimization report for: project(point *, int, double *, double *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (project(point *, int, double *, double *)) [10/115=8.7%] delta/collision/gjk.cpp(302,1)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at delta/collision/gjk.cpp(316,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized
   remark #25015: Estimate of max trip count of loop=4

   LOOP BEGIN at delta/collision/gjk.cpp(318,5)
      remark #15389: vectorization support: reference dot has unaligned access   [ delta/collision/gjk.cpp(320,7) ]
      remark #15389: vectorization support: reference dot has unaligned access   [ delta/collision/gjk.cpp(321,7) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15328: vectorization support: gather was emulated for the variable w:  strided by 5   [ delta/collision/gjk.cpp(320,20) ]
      remark #15328: vectorization support: gather was emulated for the variable w:  strided by 5   [ delta/collision/gjk.cpp(320,20) ]
      remark #15328: vectorization support: gather was emulated for the variable w:  strided by 5   [ delta/collision/gjk.cpp(320,20) ]
      remark #15329: vectorization support: scatter was emulated for the variable dot:  strided by 4   [ delta/collision/gjk.cpp(321,7) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 0.184
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15460: masked strided loads: 3 
      remark #15462: unmasked indexed (or gather) loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 20 
      remark #15477: vector loop cost: 12.250 
      remark #15478: estimated potential speedup: 1.370 
      remark #15488: --- end vector loop cost summary ---
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at delta/collision/gjk.cpp(318,5)
   <Remainder loop for vectorization>
      remark #25015: Estimate of max trip count of loop=4
   LOOP END
LOOP END

LOOP BEGIN at delta/collision/gjk.cpp(336,7)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria
   remark #25015: Estimate of max trip count of loop=4
LOOP END

LOOP BEGIN at delta/collision/gjk.cpp(345,7)
   remark #15388: vectorization support: reference delta has aligned access   [ delta/collision/gjk.cpp(349,4) ]
   remark #15388: vectorization support: reference dot has aligned access   [ delta/collision/gjk.cpp(349,4) ]
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 0.175
   remark #15300: LOOP WAS VECTORIZED
   remark #15454: masked aligned unit stride loads: 2 
   remark #15455: masked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 20 
   remark #15477: vector loop cost: 10.000 
   remark #15478: estimated potential speedup: 1.700 
   remark #15488: --- end vector loop cost summary ---
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at delta/collision/gjk.cpp(345,7)
<Remainder loop for vectorization>
   remark #25015: Estimate of max trip count of loop=4
LOOP END

LOOP BEGIN at delta/collision/gjk.cpp(356,7)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between k line 362 and k line 362
   remark #15346: vector dependence: assumed FLOW dependence between k line 362 and k line 362
   remark #15346: vector dependence: assumed ANTI dependence between k line 362 and k line 362
   remark #25439: unrolled with remainder by 2  
   remark #25015: Estimate of max trip count of loop=4
LOOP END

LOOP BEGIN at delta/collision/gjk.cpp(356,7)
<Remainder>
   remark #25015: Estimate of max trip count of loop=4
LOOP END

LOOP BEGIN at delta/collision/gjk.cpp(367,7)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between delta line 371 and delta line 376
   remark #15346: vector dependence: assumed ANTI dependence between delta line 376 and delta line 371
   remark #25015: Estimate of max trip count of loop=4

   LOOP BEGIN at delta/collision/gjk.cpp(372,4)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between delta line 376 and delta line 376
      remark #15346: vector dependence: assumed ANTI dependence between delta line 376 and delta line 376
      remark #25439: unrolled with remainder by 2  
      remark #25015: Estimate of max trip count of loop=4
   LOOP END

   LOOP BEGIN at delta/collision/gjk.cpp(372,4)
   <Remainder>
      remark #25015: Estimate of max trip count of loop=4
   LOOP END
LOOP END

LOOP BEGIN at delta/collision/gjk.cpp(392,7)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between  line 396 and w line 396
   remark #15346: vector dependence: assumed ANTI dependence between w line 396 and  line 396
   remark #25015: Estimate of max trip count of loop=4
LOOP END

LOOP BEGIN at delta/collision/gjk.cpp(403,7)
<Peeled loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at delta/collision/gjk.cpp(403,7)
<Distributed chunk1>
   remark #25084: Preprocess Loopnests: Moving Out Store    [ delta/collision/gjk.cpp(406,2) ]
   remark #25426: Loop Distributed (2 way) 
   remark #15388: vectorization support: reference l has aligned access   [ delta/collision/gjk.cpp(405,2) ]
   remark #15388: vectorization support: reference l has aligned access   [ delta/collision/gjk.cpp(405,2) ]
   remark #15305: vectorization support: vector length 4
   remark #15399: vectorization support: unroll factor set to 4
   remark #15309: vectorization support: normalized vectorization overhead 0.550
   remark #15301: PARTIAL LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 35 
   remark #15477: vector loop cost: 1.250 
   remark #15478: estimated potential speedup: 13.270 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at delta/collision/gjk.cpp(403,7)
<Remainder loop for vectorization, Distributed chunk1>
   remark #15388: vectorization support: reference l has aligned access   [ delta/collision/gjk.cpp(405,2) ]
   remark #15388: vectorization support: reference l has aligned access   [ delta/collision/gjk.cpp(405,2) ]
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 2.200
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at delta/collision/gjk.cpp(403,7)
<Remainder loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at delta/collision/gjk.cpp(403,7)
<Distributed chunk2>
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between v line 406 and v line 406
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   remark #25457: Number of partial sums replaced: 1
LOOP END

LOOP BEGIN at delta/collision/gjk.cpp(403,7)
<Remainder, Distributed chunk2>
LOOP END


Non-optimizable loops:


LOOP BEGIN at delta/collision/gjk.cpp(329,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END

    Report from: Code generation optimizations [cg]

delta/collision/gjk.cpp(320,20):remark #34032: adjacent sparse (strided) loads are not optimized. Details: stride { 40 }, types { F64-V256, F64-V256, F64-V256 }, number of elements { 4 }, select mask { 0x000000007 }.
===========================================================================

Begin optimization report for: gjk_convex_ellip(double *, int, double *, double *, double *, double *, double *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (gjk_convex_ellip(double *, int, double *, double *, double *, double *, double *)) [11/115=9.6%] delta/collision/gjk.cpp(520,1)
  -> INLINE (MANUAL): (544,14) minimal_support_point(double *, int, double *) (isz = 29) (sz = 40)
  -> INLINE (MANUAL): (545,14) maximal_ellip_support_point(point *, int, double (*)[3], double *, double *, double *, double *) (isz = 286) (sz = 305)
    -> INLINE (MANUAL): (279,17) output_point(point *, int, double (*)[3], short) (isz = 41) (sz = 54)
  -> (552,11) project(point *, int, double *, double *) (isz = 337) (sz = 352)
     [[ Inlining would exceed -inline-max-size value (352>230) <1>]]


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at delta/collision/gjk.cpp(542,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at delta/collision/gjk.cpp(147,3) inlined into delta/collision/gjk.cpp(544,14)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization   [ delta/collision/gjk.cpp(150,38) ]
      remark #15346: vector dependence: assumed ANTI dependence between _dot line 150 and _dot line 149   [ delta/collision/gjk.cpp(150,38) ]
      remark #15346: vector dependence: assumed FLOW dependence between _dot line 149 and _dot line 150   [ delta/collision/gjk.cpp(150,38) ]
      remark #15346: vector dependence: assumed FLOW dependence between _dot line 149 and _dot line 150   [ delta/collision/gjk.cpp(150,38) ]
   LOOP END

   LOOP BEGIN at delta/collision/gjk.cpp(178,3) inlined into delta/collision/gjk.cpp(545,14)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria

      LOOP BEGIN at delta/collision/gjk.cpp(180,5) inlined into delta/collision/gjk.cpp(545,14)
         remark #15524: loop was not vectorized: search loop cannot be vectorized unless all memory references can be aligned vector load. 
         remark #15305: vectorization support: vector length 2
         remark #15460: masked strided loads: 1 
      LOOP END
   LOOP END

   LOOP BEGIN at delta/collision/gjk.cpp(282,3) inlined into delta/collision/gjk.cpp(545,14)
      remark #15388: vectorization support: reference _T has aligned access
      remark #15389: vectorization support: reference brot has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 4
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 2.625
      remark #15301: MATERIALIZED LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 5 
      remark #15477: vector loop cost: 1.000 
      remark #15478: estimated potential speedup: 1.320 
      remark #15488: --- end vector loop cost summary ---
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at delta/collision/gjk.cpp(282,3) inlined into delta/collision/gjk.cpp(545,14)
   <Remainder loop for vectorization>
      remark #25436: completely unrolled by 1  
   LOOP END
LOOP END

LOOP BEGIN at delta/collision/gjk.cpp(561,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between p line 563 and q line 564
   remark #15346: vector dependence: assumed OUTPUT dependence between q line 564 and p line 563
   remark #25015: Estimate of max trip count of loop=4
LOOP END
===========================================================================

Begin optimization report for: gjk_convex_point(double *, int, double *, double *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (gjk_convex_point(double *, int, double *, double *)) [12/115=10.4%] delta/collision/gjk.cpp(579,1)
  -> INLINE (MANUAL): (597,14) minimal_support_point(double *, int, double *) (isz = 29) (sz = 40)
  -> (605,11) project(point *, int, double *, double *) (isz = 337) (sz = 352)
     [[ Inlining would exceed -inline-max-size value (352>230) <1>]]


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at delta/collision/gjk.cpp(595,3)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at delta/collision/gjk.cpp(147,3) inlined into delta/collision/gjk.cpp(597,14)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization   [ delta/collision/gjk.cpp(150,38) ]
      remark #15346: vector dependence: assumed ANTI dependence between _dot line 150 and _dot line 149   [ delta/collision/gjk.cpp(150,38) ]
      remark #15346: vector dependence: assumed FLOW dependence between _dot line 149 and _dot line 150   [ delta/collision/gjk.cpp(150,38) ]
      remark #15346: vector dependence: assumed FLOW dependence between _dot line 149 and _dot line 150   [ delta/collision/gjk.cpp(150,38) ]
   LOOP END
LOOP END

LOOP BEGIN at delta/collision/gjk.cpp(613,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between w.a line 615 and q line 615
   remark #15346: vector dependence: assumed FLOW dependence between q line 615 and w.a line 615
   remark #25015: Estimate of max trip count of loop=4
LOOP END
===========================================================================

Begin optimization report for: gjk_sphere_sphere(double *, double, double *, double, double *, double *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (gjk_sphere_sphere(double *, double, double *, double, double *, double *)) [13/115=11.3%] delta/collision/gjk.cpp(629,1)

===========================================================================

Begin optimization report for: gjk_sphere_ellip(double *, double, double *, double *, double *, double *, double *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (gjk_sphere_ellip(double *, double, double *, double *, double *, double *, double *)) [14/115=12.2%] delta/collision/gjk.cpp(657,1)
  -> INLINE (MANUAL): (685,14) minimal_sphere_support_point(point *, int, double (*)[3], double *, double, double *) (isz = 131) (sz = 148)
    -> INLINE (MANUAL): (201,17) output_point(point *, int, double (*)[3], short) (isz = 41) (sz = 54)
  -> INLINE (MANUAL): (686,14) maximal_ellip_support_point(point *, int, double (*)[3], double *, double *, double *, double *) (isz = 286) (sz = 305)
    -> INLINE (MANUAL): (279,17) output_point(point *, int, double (*)[3], short) (isz = 41) (sz = 54)
  -> (693,11) project(point *, int, double *, double *) (isz = 337) (sz = 352)
     [[ Inlining would exceed -inline-max-size value (352>230) <1>]]


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at delta/collision/gjk.cpp(683,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at delta/collision/gjk.cpp(178,3) inlined into delta/collision/gjk.cpp(685,14)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria

      LOOP BEGIN at delta/collision/gjk.cpp(180,5) inlined into delta/collision/gjk.cpp(685,14)
         remark #15524: loop was not vectorized: search loop cannot be vectorized unless all memory references can be aligned vector load. 
         remark #15305: vectorization support: vector length 2
         remark #15460: masked strided loads: 1 
      LOOP END
   LOOP END

   LOOP BEGIN at delta/collision/gjk.cpp(178,3) inlined into delta/collision/gjk.cpp(686,14)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria

      LOOP BEGIN at delta/collision/gjk.cpp(180,5) inlined into delta/collision/gjk.cpp(686,14)
         remark #15524: loop was not vectorized: search loop cannot be vectorized unless all memory references can be aligned vector load. 
         remark #15305: vectorization support: vector length 2
         remark #15460: masked strided loads: 1 
      LOOP END
   LOOP END

   LOOP BEGIN at delta/collision/gjk.cpp(282,3) inlined into delta/collision/gjk.cpp(686,14)
      remark #15388: vectorization support: reference _T has aligned access
      remark #15389: vectorization support: reference brot has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 4
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 2.625
      remark #15301: MATERIALIZED LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 5 
      remark #15477: vector loop cost: 1.000 
      remark #15478: estimated potential speedup: 1.320 
      remark #15488: --- end vector loop cost summary ---
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at delta/collision/gjk.cpp(282,3) inlined into delta/collision/gjk.cpp(686,14)
   <Remainder loop for vectorization>
      remark #25436: completely unrolled by 1  
   LOOP END
LOOP END

LOOP BEGIN at delta/collision/gjk.cpp(702,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between p line 704 and q line 705
   remark #15346: vector dependence: assumed OUTPUT dependence between q line 705 and p line 704
   remark #25015: Estimate of max trip count of loop=4
LOOP END
===========================================================================

Begin optimization report for: gjk_ellip_ellip(double *, double *, double *, double *, double *, double *, double *, double *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (gjk_ellip_ellip(double *, double *, double *, double *, double *, double *, double *, double *)) [15/115=13.0%] delta/collision/gjk.cpp(720,1)
  -> INLINE (MANUAL): (750,14) minimal_ellip_support_point(point *, int, double (*)[3], double *, double *, double *, double *) (isz = 298) (sz = 317)
    -> INLINE (MANUAL): (243,17) output_point(point *, int, double (*)[3], short) (isz = 41) (sz = 54)
  -> INLINE (MANUAL): (751,14) maximal_ellip_support_point(point *, int, double (*)[3], double *, double *, double *, double *) (isz = 286) (sz = 305)
    -> INLINE (MANUAL): (279,17) output_point(point *, int, double (*)[3], short) (isz = 41) (sz = 54)
  -> (758,11) project(point *, int, double *, double *) (isz = 337) (sz = 352)
     [[ Inlining would exceed -inline-max-size value (352>230) <1>]]


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at delta/collision/gjk.cpp(748,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at delta/collision/gjk.cpp(178,3) inlined into delta/collision/gjk.cpp(750,14)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria

      LOOP BEGIN at delta/collision/gjk.cpp(180,5) inlined into delta/collision/gjk.cpp(750,14)
         remark #15524: loop was not vectorized: search loop cannot be vectorized unless all memory references can be aligned vector load. 
         remark #15305: vectorization support: vector length 2
         remark #15460: masked strided loads: 1 
      LOOP END
   LOOP END

   LOOP BEGIN at delta/collision/gjk.cpp(246,3) inlined into delta/collision/gjk.cpp(750,14)
      remark #15388: vectorization support: reference _T has aligned access
      remark #15389: vectorization support: reference arot has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 4
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 2.625
      remark #15301: MATERIALIZED LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 5 
      remark #15477: vector loop cost: 1.000 
      remark #15478: estimated potential speedup: 1.320 
      remark #15488: --- end vector loop cost summary ---
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at delta/collision/gjk.cpp(178,3) inlined into delta/collision/gjk.cpp(751,14)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria

      LOOP BEGIN at delta/collision/gjk.cpp(180,5) inlined into delta/collision/gjk.cpp(751,14)
         remark #15524: loop was not vectorized: search loop cannot be vectorized unless all memory references can be aligned vector load. 
         remark #15305: vectorization support: vector length 2
         remark #15460: masked strided loads: 1 
      LOOP END
   LOOP END

   LOOP BEGIN at delta/collision/gjk.cpp(282,3) inlined into delta/collision/gjk.cpp(751,14)
      remark #15388: vectorization support: reference _T has aligned access
      remark #15389: vectorization support: reference brot has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 4
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 2.625
      remark #15301: MATERIALIZED LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 5 
      remark #15477: vector loop cost: 1.000 
      remark #15478: estimated potential speedup: 1.320 
      remark #15488: --- end vector loop cost summary ---
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at delta/collision/gjk.cpp(246,3) inlined into delta/collision/gjk.cpp(750,14)
   <Remainder loop for vectorization>
      remark #25436: completely unrolled by 1  
   LOOP END

   LOOP BEGIN at delta/collision/gjk.cpp(282,3) inlined into delta/collision/gjk.cpp(751,14)
   <Remainder loop for vectorization>
      remark #25436: completely unrolled by 1  
   LOOP END
LOOP END

LOOP BEGIN at delta/collision/gjk.cpp(767,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between p line 769 and q line 770
   remark #15346: vector dependence: assumed OUTPUT dependence between q line 770 and p line 769
   remark #25015: Estimate of max trip count of loop=4
LOOP END
===========================================================================

Begin optimization report for: gjk_ellip_point(double *, double *, double *, double *, double *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (gjk_ellip_point(double *, double *, double *, double *, double *)) [16/115=13.9%] delta/collision/gjk.cpp(785,1)
  -> INLINE (MANUAL): (809,14) minimal_ellip_support_point(point *, int, double (*)[3], double *, double *, double *, double *) (isz = 298) (sz = 317)
    -> INLINE (MANUAL): (243,17) output_point(point *, int, double (*)[3], short) (isz = 41) (sz = 54)
  -> (817,11) project(point *, int, double *, double *) (isz = 337) (sz = 352)
     [[ Inlining would exceed -inline-max-size value (352>230) <1>]]


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at delta/collision/gjk.cpp(807,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at delta/collision/gjk.cpp(178,3) inlined into delta/collision/gjk.cpp(809,14)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria

      LOOP BEGIN at delta/collision/gjk.cpp(180,5) inlined into delta/collision/gjk.cpp(809,14)
         remark #15524: loop was not vectorized: search loop cannot be vectorized unless all memory references can be aligned vector load. 
         remark #15305: vectorization support: vector length 2
         remark #15460: masked strided loads: 1 
      LOOP END
   LOOP END

   LOOP BEGIN at delta/collision/gjk.cpp(246,3) inlined into delta/collision/gjk.cpp(809,14)
      remark #15388: vectorization support: reference _T has aligned access
      remark #15389: vectorization support: reference arot has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 4
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 2.625
      remark #15301: MATERIALIZED LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 5 
      remark #15477: vector loop cost: 1.000 
      remark #15478: estimated potential speedup: 1.320 
      remark #15488: --- end vector loop cost summary ---
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at delta/collision/gjk.cpp(246,3) inlined into delta/collision/gjk.cpp(809,14)
   <Remainder loop for vectorization>
      remark #25436: completely unrolled by 1  
   LOOP END
LOOP END

LOOP BEGIN at delta/collision/gjk.cpp(825,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between w.a line 827 and q line 827
   remark #15346: vector dependence: assumed FLOW dependence between q line 827 and w.a line 827
   remark #25015: Estimate of max trip count of loop=4
LOOP END
===========================================================================

Begin optimization report for: gjk_convex_convex_gap(double *, int, double *, int, double *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (gjk_convex_convex_gap(double *, int, double *, int, double *)) [17/115=14.8%] delta/collision/gjk.cpp(841,1)
  -> INLINE (MANUAL): (844,7) maximal_support_point(double *, int, double *) (isz = 29) (sz = 40)
  -> INLINE (MANUAL): (845,7) minimal_support_point(double *, int, double *) (isz = 29) (sz = 40)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at delta/collision/gjk.cpp(161,3) inlined into delta/collision/gjk.cpp(844,7)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization   [ delta/collision/gjk.cpp(164,38) ]
   remark #15346: vector dependence: assumed ANTI dependence between _dotmax line 164 and _dotmax line 164   [ delta/collision/gjk.cpp(164,38) ]
   remark #15346: vector dependence: assumed FLOW dependence between _dotmax line 164 and _dotmax line 164   [ delta/collision/gjk.cpp(164,38) ]
   remark #15346: vector dependence: assumed FLOW dependence between _dot line 163 and _dot line 164   [ delta/collision/gjk.cpp(164,38) ]
LOOP END

LOOP BEGIN at delta/collision/gjk.cpp(147,3) inlined into delta/collision/gjk.cpp(845,7)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization   [ delta/collision/gjk.cpp(150,38) ]
   remark #15346: vector dependence: assumed ANTI dependence between _dotmin line 150 and _dotmin line 150   [ delta/collision/gjk.cpp(150,38) ]
   remark #15346: vector dependence: assumed FLOW dependence between _dotmin line 150 and _dotmin line 150   [ delta/collision/gjk.cpp(150,38) ]
   remark #15346: vector dependence: assumed FLOW dependence between _dot line 149 and _dot line 150   [ delta/collision/gjk.cpp(150,38) ]
LOOP END
===========================================================================

Begin optimization report for: gjk_convex_sphere_gap(double *, int, double *, double, double *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (gjk_convex_sphere_gap(double *, int, double *, double, double *)) [18/115=15.7%] delta/collision/gjk.cpp(852,1)
  -> INLINE (MANUAL): (855,7) maximal_support_point(double *, int, double *) (isz = 29) (sz = 40)
  -> INLINE (MANUAL): (856,7) minimal_sphere_support_point(point *, int, double (*)[3], double *, double, double *) (isz = 131) (sz = 148)
    -> INLINE (MANUAL): (201,17) output_point(point *, int, double (*)[3], short) (isz = 41) (sz = 54)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at delta/collision/gjk.cpp(161,3) inlined into delta/collision/gjk.cpp(855,7)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization   [ delta/collision/gjk.cpp(164,38) ]
   remark #15346: vector dependence: assumed ANTI dependence between _dotmax line 164 and _dotmax line 164   [ delta/collision/gjk.cpp(164,38) ]
   remark #15346: vector dependence: assumed FLOW dependence between _dotmax line 164 and _dotmax line 164   [ delta/collision/gjk.cpp(164,38) ]
   remark #15346: vector dependence: assumed FLOW dependence between _dot line 163 and _dot line 164   [ delta/collision/gjk.cpp(164,38) ]
LOOP END
===========================================================================

Begin optimization report for: gjk_convex_ellip_gap(double *, int, double *, double *, double *, double *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (gjk_convex_ellip_gap(double *, int, double *, double *, double *, double *)) [19/115=16.5%] delta/collision/gjk.cpp(863,1)
  -> INLINE (MANUAL): (866,7) maximal_support_point(double *, int, double *) (isz = 29) (sz = 40)
  -> INLINE (MANUAL): (867,7) minimal_ellip_support_point(point *, int, double (*)[3], double *, double *, double *, double *) (isz = 298) (sz = 317)
    -> INLINE (MANUAL): (243,17) output_point(point *, int, double (*)[3], short) (isz = 41) (sz = 54)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at delta/collision/gjk.cpp(161,3) inlined into delta/collision/gjk.cpp(866,7)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization   [ delta/collision/gjk.cpp(164,38) ]
   remark #15346: vector dependence: assumed ANTI dependence between _dotmax line 164 and _dotmax line 164   [ delta/collision/gjk.cpp(164,38) ]
   remark #15346: vector dependence: assumed FLOW dependence between _dotmax line 164 and _dotmax line 164   [ delta/collision/gjk.cpp(164,38) ]
   remark #15346: vector dependence: assumed FLOW dependence between _dot line 163 and _dot line 164   [ delta/collision/gjk.cpp(164,38) ]
LOOP END

LOOP BEGIN at delta/collision/gjk.cpp(246,3) inlined into delta/collision/gjk.cpp(867,7)
   remark #15388: vectorization support: reference _T has aligned access
   remark #15389: vectorization support: reference brot has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.375
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 1.000 
   remark #15478: estimated potential speedup: 2.810 
   remark #15488: --- end vector loop cost summary ---
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at delta/collision/gjk.cpp(246,3) inlined into delta/collision/gjk.cpp(867,7)
<Remainder loop for vectorization>
   remark #25436: completely unrolled by 1  
LOOP END
===========================================================================

Begin optimization report for: gjk_sphere_sphere_gap(double *, double, double *, double, double *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (gjk_sphere_sphere_gap(double *, double, double *, double, double *)) [20/115=17.4%] delta/collision/gjk.cpp(874,1)
  -> INLINE (MANUAL): (877,7) maximal_sphere_support_point(point *, int, double (*)[3], double *, double, double *) (isz = 128) (sz = 145)
    -> INLINE (MANUAL): (214,17) output_point(point *, int, double (*)[3], short) (isz = 41) (sz = 54)
  -> INLINE (MANUAL): (878,7) minimal_sphere_support_point(point *, int, double (*)[3], double *, double, double *) (isz = 131) (sz = 148)
    -> INLINE (MANUAL): (201,17) output_point(point *, int, double (*)[3], short) (isz = 41) (sz = 54)

===========================================================================

Begin optimization report for: gjk_sphere_ellip_gap(double *, double, double *, double *, double *, double *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (gjk_sphere_ellip_gap(double *, double, double *, double *, double *, double *)) [21/115=18.3%] delta/collision/gjk.cpp(885,1)
  -> INLINE (MANUAL): (888,7) maximal_sphere_support_point(point *, int, double (*)[3], double *, double, double *) (isz = 128) (sz = 145)
    -> INLINE (MANUAL): (214,17) output_point(point *, int, double (*)[3], short) (isz = 41) (sz = 54)
  -> INLINE (MANUAL): (889,7) minimal_ellip_support_point(point *, int, double (*)[3], double *, double *, double *, double *) (isz = 298) (sz = 317)
    -> INLINE (MANUAL): (243,17) output_point(point *, int, double (*)[3], short) (isz = 41) (sz = 54)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at delta/collision/gjk.cpp(246,3) inlined into delta/collision/gjk.cpp(889,7)
   remark #15388: vectorization support: reference _T has aligned access
   remark #15389: vectorization support: reference brot has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.375
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 1.000 
   remark #15478: estimated potential speedup: 2.810 
   remark #15488: --- end vector loop cost summary ---
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at delta/collision/gjk.cpp(246,3) inlined into delta/collision/gjk.cpp(889,7)
<Remainder loop for vectorization>
   remark #25436: completely unrolled by 1  
LOOP END
===========================================================================

Begin optimization report for: gjk_ellip_ellip_gap(double *, double *, double *, double *, double *, double *, double *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (gjk_ellip_ellip_gap(double *, double *, double *, double *, double *, double *, double *)) [22/115=19.1%] delta/collision/gjk.cpp(896,1)
  -> INLINE (MANUAL): (899,7) maximal_ellip_support_point(point *, int, double (*)[3], double *, double *, double *, double *) (isz = 286) (sz = 305)
    -> INLINE (MANUAL): (279,17) output_point(point *, int, double (*)[3], short) (isz = 41) (sz = 54)
  -> INLINE (MANUAL): (900,7) minimal_ellip_support_point(point *, int, double (*)[3], double *, double *, double *, double *) (isz = 298) (sz = 317)
    -> INLINE (MANUAL): (243,17) output_point(point *, int, double (*)[3], short) (isz = 41) (sz = 54)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at delta/collision/gjk.cpp(282,3) inlined into delta/collision/gjk.cpp(899,7)
   remark #15388: vectorization support: reference _T has aligned access
   remark #15389: vectorization support: reference arot has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.375
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 1.000 
   remark #15478: estimated potential speedup: 2.810 
   remark #15488: --- end vector loop cost summary ---
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at delta/collision/gjk.cpp(282,3) inlined into delta/collision/gjk.cpp(899,7)
<Remainder loop for vectorization>
   remark #25436: completely unrolled by 1  
LOOP END

LOOP BEGIN at delta/collision/gjk.cpp(246,3) inlined into delta/collision/gjk.cpp(900,7)
   remark #15388: vectorization support: reference _T has aligned access
   remark #15389: vectorization support: reference brot has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.375
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 1.000 
   remark #15478: estimated potential speedup: 2.810 
   remark #15488: --- end vector loop cost summary ---
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at delta/collision/gjk.cpp(246,3) inlined into delta/collision/gjk.cpp(900,7)
<Remainder loop for vectorization>
   remark #25436: completely unrolled by 1  
LOOP END
===========================================================================

Begin optimization report for: gjk_ellip_support_point(double *, double *, double *, double *, short, double *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (gjk_ellip_support_point(double *, double *, double *, double *, short, double *)) [23/115=20.0%] delta/collision/gjk.cpp(908,1)
  -> INLINE (MANUAL): (909,13) minimal_ellip_support_point(point *, int, double (*)[3], double *, double *, double *, double *) (isz = 298) (sz = 317)
    -> INLINE (MANUAL): (243,17) output_point(point *, int, double (*)[3], short) (isz = 41) (sz = 54)
  -> INLINE (MANUAL): (910,8) maximal_ellip_support_point(point *, int, double (*)[3], double *, double *, double *, double *) (isz = 286) (sz = 305)
    -> INLINE (MANUAL): (279,17) output_point(point *, int, double (*)[3], short) (isz = 41) (sz = 54)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at delta/collision/gjk.cpp(246,3) inlined into delta/collision/gjk.cpp(909,13)
   remark #15388: vectorization support: reference _T has aligned access
   remark #15389: vectorization support: reference rot has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.375
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 1.000 
   remark #15478: estimated potential speedup: 2.810 
   remark #15488: --- end vector loop cost summary ---
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at delta/collision/gjk.cpp(246,3) inlined into delta/collision/gjk.cpp(909,13)
<Remainder loop for vectorization>
   remark #25436: completely unrolled by 1  
LOOP END

LOOP BEGIN at delta/collision/gjk.cpp(282,3) inlined into delta/collision/gjk.cpp(910,8)
   remark #15388: vectorization support: reference _T has aligned access
   remark #15389: vectorization support: reference rot has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.375
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 1.000 
   remark #15478: estimated potential speedup: 2.810 
   remark #15488: --- end vector loop cost summary ---
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at delta/collision/gjk.cpp(282,3) inlined into delta/collision/gjk.cpp(910,8)
<Remainder loop for vectorization>
   remark #25436: completely unrolled by 1  
LOOP END
===========================================================================

Begin optimization report for: std::__1::allocator<delta::collision::contactpoint>::allocator(std::__1::allocator<delta::collision::contactpoint> *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::allocator<delta::collision::contactpoint>::allocator(std::__1::allocator<delta::collision::contactpoint> *)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1713,53)

===========================================================================

Begin optimization report for: std::__1::allocator<delta::collision::contactpoint>::allocate(std::__1::allocator<delta::collision::contactpoint> *, std::__1::allocator<delta::collision::contactpoint>::size_type, std::__1::allocator<void>::const_pointer)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::allocator<delta::collision::contactpoint>::allocate(std::__1::allocator<delta::collision::contactpoint> *, std::__1::allocator<delta::collision::contactpoint>::size_type, std::__1::allocator<void>::const_pointer)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1720,9)

===========================================================================

Begin optimization report for: std::__1::allocator<delta::collision::contactpoint>::deallocate(std::__1::allocator<delta::collision::contactpoint> *, std::__1::allocator<delta::collision::contactpoint>::pointer, std::__1::allocator<delta::collision::contactpoint>::size_type)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::allocator<delta::collision::contactpoint>::deallocate(std::__1::allocator<delta::collision::contactpoint> *, std::__1::allocator<delta::collision::contactpoint>::pointer, std::__1::allocator<delta::collision::contactpoint>::size_type)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1722,9)

===========================================================================

Begin optimization report for: std::__1::allocator<delta::collision::contactpoint>::max_size(const std::__1::allocator<delta::collision::contactpoint> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::allocator<delta::collision::contactpoint>::max_size(const std::__1::allocator<delta::collision::contactpoint> *) const) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1724,9)

===========================================================================

Begin optimization report for: std::__1::allocator<delta::collision::contactpoint>::destroy(std::__1::allocator<delta::collision::contactpoint> *, std::__1::allocator<delta::collision::contactpoint>::pointer)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::allocator<delta::collision::contactpoint>::destroy(std::__1::allocator<delta::collision::contactpoint> *, std::__1::allocator<delta::collision::contactpoint>::pointer)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1786,57)

===========================================================================

Begin optimization report for: std::__1::allocator<delta::collision::contactpoint>::construct<delta::collision::contactpoint, const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &>(std::__1::allocator<delta::collision::contactpoint> *, delta::collision::contactpoint *, const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::allocator<delta::collision::contactpoint>::construct<delta::collision::contactpoint, const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &>(std::__1::allocator<delta::collision::contactpoint> *, delta::collision::contactpoint *, const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1730,9)

===========================================================================

Begin optimization report for: std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::allocate(std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::allocator_type &, std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::size_type)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::allocate(std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::allocator_type &, std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::size_type)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1479,9)

===========================================================================

Begin optimization report for: std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::deallocate(std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::allocator_type &, std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::pointer, std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::size_type)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::deallocate(std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::allocator_type &, std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::pointer, std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::size_type)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1487,9)

===========================================================================

Begin optimization report for: std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::max_size(const std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::allocator_type &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::max_size(const std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::allocator_type &)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1531,9)

===========================================================================

Begin optimization report for: std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::__destroy<delta::collision::contactpoint>(std::__1::true_type, std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::allocator_type &, delta::collision::contactpoint *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::__destroy<delta::collision::contactpoint>(std::__1::true_type, std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::allocator_type &, delta::collision::contactpoint *)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1659,13)

===========================================================================

Begin optimization report for: std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::construct<delta::collision::contactpoint, const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &>(std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::allocator_type &, delta::collision::contactpoint *, const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::construct<delta::collision::contactpoint, const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &>(std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::allocator_type &, delta::collision::contactpoint *, const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1493,13)

===========================================================================

Begin optimization report for: std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::__construct<delta::collision::contactpoint, const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &>(std::__1::true_type, std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::allocator_type &, delta::collision::contactpoint *, const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::__construct<delta::collision::contactpoint, const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &>(std::__1::true_type, std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::allocator_type &, delta::collision::contactpoint *, const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1647,13)

===========================================================================

Begin optimization report for: std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::__construct_backward<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer>(std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::allocator_type &, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::__construct_backward<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer>(std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::allocator_type &, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer &)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1606,9)

===========================================================================

Begin optimization report for: std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U>::__libcpp_compressed_pair_imp(std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U> *, std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U>::_T1_param)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U>::__libcpp_compressed_pair_imp(std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U> *, std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U>::_T1_param)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(2223,53)

===========================================================================

Begin optimization report for: std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U>::__libcpp_compressed_pair_imp(std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U> *const, std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U>::_T1_param)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U>::__libcpp_compressed_pair_imp(std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U> *const, std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U>::_T1_param)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(2222,40)

===========================================================================

Begin optimization report for: std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U>::first(std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U> *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U>::first(std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U> *)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(2283,75)

===========================================================================

Begin optimization report for: std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U>::first(const std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U>::first(const std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U> *) const) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(2284,75)

===========================================================================

Begin optimization report for: std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U>::second(std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U> *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U>::second(std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U> *)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(2286,76)

===========================================================================

Begin optimization report for: std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U>::second(const std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U>::second(const std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U> *) const) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(2287,76)

===========================================================================

Begin optimization report for: std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::__compressed_pair(std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type> *, std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::_T1_param)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::__compressed_pair(std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type> *, std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::_T1_param)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(2402,49)

===========================================================================

Begin optimization report for: std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::first(std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type> *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::first(std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type> *)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(2455,75)

===========================================================================

Begin optimization report for: std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::first(const std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::first(const std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type> *) const) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(2456,75)

===========================================================================

Begin optimization report for: std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::second(std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type> *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::second(std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type> *)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(2458,76)

===========================================================================

Begin optimization report for: std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::second(const std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::second(const std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type> *) const) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(2459,76)

===========================================================================

Begin optimization report for: std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__alloc(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__alloc(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(350,9)

===========================================================================

Begin optimization report for: std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__alloc(const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__alloc(const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *) const) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(353,9)

===========================================================================

Begin optimization report for: std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__end_cap(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__end_cap(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(356,9)

===========================================================================

Begin optimization report for: std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__end_cap(const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__end_cap(const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *) const) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(359,9)

===========================================================================

Begin optimization report for: std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__vector_base(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__vector_base(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(434,1)

===========================================================================

Begin optimization report for: std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__vector_base(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *const)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__vector_base(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *const)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(429,33)

===========================================================================

Begin optimization report for: std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::~__vector_base(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::~__vector_base(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(448,1)

===========================================================================

Begin optimization report for: std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::~__vector_base(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *const)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::~__vector_base(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *const)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(365,5)

===========================================================================

Begin optimization report for: std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::clear(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::clear(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(368,28)

===========================================================================

Begin optimization report for: std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::capacity(const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::capacity(const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *) const) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(371,9)

===========================================================================

Begin optimization report for: std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__destruct_at_end(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__destruct_at_end(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(422,1)

===========================================================================

Begin optimization report for: std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::vector(std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::vector(std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(484,9)

===========================================================================

Begin optimization report for: std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size(const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size(const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *) const) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(641,9)

===========================================================================

Begin optimization report for: std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::capacity(const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::capacity(const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *) const) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(644,9)

===========================================================================

Begin optimization report for: std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::max_size(const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::max_size(const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *) const) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(948,1)

===========================================================================

Begin optimization report for: std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::data(const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::data(const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *) const) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(683,9)

===========================================================================

Begin optimization report for: std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::push_back(std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::const_reference)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::push_back(std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::const_reference)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(1582,1)

===========================================================================

Begin optimization report for: std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__recommend(const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__recommend(const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type) const) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(957,1)

===========================================================================

Begin optimization report for: std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__swap_out_circular_buffer(std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &> &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__swap_out_circular_buffer(std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &> &)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(887,1)

===========================================================================

Begin optimization report for: std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__annotate_contiguous_container(const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *, const void *, const void *, const void *, const void *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__annotate_contiguous_container(const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *, const void *, const void *, const void *, const void *) const) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(831,5)

===========================================================================

Begin optimization report for: std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__push_back_slow_path<const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &>(std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *, const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__push_back_slow_path<const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &>(std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *, const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(1569,1)

===========================================================================

Begin optimization report for: std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U>::__libcpp_compressed_pair_imp(std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U> *, std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U>::_T1_param, std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U>::_T2_param)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U>::__libcpp_compressed_pair_imp(std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U> *, std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U>::_T1_param, std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U>::_T2_param)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(2044,97)

===========================================================================

Begin optimization report for: std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U>::__libcpp_compressed_pair_imp(std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U> *const, std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U>::_T1_param, std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U>::_T2_param)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U>::__libcpp_compressed_pair_imp(std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U> *const, std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U>::_T1_param, std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U>::_T2_param)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(2043,31)

===========================================================================

Begin optimization report for: std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U>::first(std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U> *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U>::first(std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U> *)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(2099,75)

===========================================================================

Begin optimization report for: std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U>::first(const std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U>::first(const std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U> *) const) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(2100,75)

===========================================================================

Begin optimization report for: std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U>::second(std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U> *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U>::second(std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U> *)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(2102,76)

===========================================================================

Begin optimization report for: std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type>::__compressed_pair(std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type> *, std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type>::_T1_param, std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type>::_T2_param)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type>::__compressed_pair(std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type> *, std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type>::_T1_param, std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type>::_T2_param)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(2406,82)

===========================================================================

Begin optimization report for: std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type>::first(std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type> *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type>::first(std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type> *)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(2455,75)

===========================================================================

Begin optimization report for: std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type>::first(const std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type>::first(const std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type> *) const) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(2456,75)

===========================================================================

Begin optimization report for: std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type>::second(std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type> *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type>::second(std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type> *)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(2458,76)

===========================================================================

Begin optimization report for: std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::__alloc(std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &> *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::__alloc(std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &> *)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__split_buffer(54,81)

===========================================================================

Begin optimization report for: std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::__end_cap(std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &> *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::__end_cap(std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &> *)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__split_buffer(56,81)

===========================================================================

Begin optimization report for: std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::__end_cap(const std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::__end_cap(const std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &> *) const) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__split_buffer(57,81)

===========================================================================

Begin optimization report for: std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::__split_buffer(std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &> *, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::size_type, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::size_type, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::__alloc_rr &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::__split_buffer(std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &> *, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::size_type, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::size_type, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::__alloc_rr &)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__split_buffer(305,1)

===========================================================================

Begin optimization report for: std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::clear(std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &> *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::clear(std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &> *)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__split_buffer(83,9)

===========================================================================

Begin optimization report for: std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::capacity(const std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::capacity(const std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &> *) const) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__split_buffer(86,58)

===========================================================================

Begin optimization report for: std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::__destruct_at_end(std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &> *, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::__destruct_at_end(std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &> *, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__split_buffer(136,9)

===========================================================================

Begin optimization report for: std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::__destruct_at_end(std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &> *, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::false_type)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::__destruct_at_end(std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &> *, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::false_type)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__split_buffer(289,1)

===========================================================================

Begin optimization report for: std::__1::__less<unsigned long, unsigned long>::operator()(const std::__1::__less<unsigned long, unsigned long> *, const unsigned long &, const unsigned long &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__less<unsigned long, unsigned long>::operator()(const std::__1::__less<unsigned long, unsigned long> *, const unsigned long &, const unsigned long &) const) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(702,59)

===========================================================================

Begin optimization report for: std::__1::__allocate(size_t)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__allocate(size_t)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/new(164,66)

===========================================================================

Begin optimization report for: std::__1::__deallocate(void *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__deallocate(void *)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/new(172,65)

===========================================================================

Begin optimization report for: std::__1::__to_raw_pointer<delta::collision::contactpoint>(delta::collision::contactpoint *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__to_raw_pointer<delta::collision::contactpoint>(delta::collision::contactpoint *)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1057,1)

===========================================================================

Begin optimization report for: std::__1::forward<std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::_T1_param>(std::__1::remove_reference<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer>::type &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::forward<std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::_T1_param>(std::__1::remove_reference<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer>::type &)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/type_traits(1658,1)

===========================================================================

Begin optimization report for: std::__1::forward<const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &>(std::__1::remove_reference<const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &>::type &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::forward<const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &>(std::__1::remove_reference<const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &>::type &)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/type_traits(1658,1)

===========================================================================

Begin optimization report for: std::__1::min<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type>(const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type &, const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::min<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type>(const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type &, const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type &)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2590,1)

===========================================================================

Begin optimization report for: std::__1::min<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type, std::__1::__less<unsigned long, unsigned long>>(const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type &, const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type &, std::__1::__less<unsigned long, unsigned long>)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::min<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type, std::__1::__less<unsigned long, unsigned long>>(const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type &, const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type &, std::__1::__less<unsigned long, unsigned long>)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2582,1)

===========================================================================

Begin optimization report for: std::__1::max<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type>(const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type &, const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::max<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type>(const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type &, const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type &)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2655,1)

===========================================================================

Begin optimization report for: std::__1::max<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type, std::__1::__less<unsigned long, unsigned long>>(const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type &, const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type &, std::__1::__less<unsigned long, unsigned long>)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::max<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type, std::__1::__less<unsigned long, unsigned long>>(const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type &, const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type &, std::__1::__less<unsigned long, unsigned long>)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2647,1)

===========================================================================

Begin optimization report for: std::__1::forward<std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type>::_T2_param>(std::__1::remove_reference<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::type &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::forward<std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type>::_T2_param>(std::__1::remove_reference<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::type &)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/type_traits(1658,1)

===========================================================================

Begin optimization report for: std::__1::move_if_noexcept<delta::collision::contactpoint>(delta::collision::contactpoint &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::move_if_noexcept<delta::collision::contactpoint>(delta::collision::contactpoint &)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/utility(241,1)

===========================================================================

Begin optimization report for: std::__1::move<delta::collision::contactpoint &>(delta::collision::contactpoint &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::move<delta::collision::contactpoint &>(delta::collision::contactpoint &)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/type_traits(1649,1)

===========================================================================

Begin optimization report for: std::__1::swap<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer>(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer &, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::swap<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer>(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer &, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer &)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/type_traits(3596,1)

===========================================================================

Begin optimization report for: std::__1::move<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer &>(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::move<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer &>(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer &)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/type_traits(1649,1)

===========================================================================

Begin optimization report for: delta::collision::gjk(std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *, int, double *, double *, double *, double, int, int, double *, double *, double *, double, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (delta::collision::gjk(std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *, int, double *, double *, double *, double, int, int, double *, double *, double *, double, int)) [102/115=88.7%] delta/collision/gjk.cpp(40,3)
  -> INLINE (MANUAL): (41,29) std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::vector(std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *) (isz = 11) (sz = 16)
    -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector:(483,5) std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__vector_base(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *const) (isz = 11) (sz = 16)
      -> INLINE (MANUAL): (429,33) std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__vector_base(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *) (isz = 20) (sz = 25)
        -> DELETED: (429,33) std::__1::__vector_base_common<true>::__vector_base_common(std::__1::__vector_base_common<true> *const) (isz = 0) (sz = 5)
        -> INLINE (MANUAL): (433,18) std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::__compressed_pair(std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type> *, std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::_T1_param) (isz = 11) (sz = 18)
          -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:(2402,16) std::__1::forward<std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::_T1_param>(std::__1::remove_reference<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer>::type &) (isz = 0) (sz = 6)
          -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:(2402,16) std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U>::__libcpp_compressed_pair_imp(std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U> *const, std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U>::_T1_param) (isz = 6) (sz = 13)
            -> INLINE (MANUAL): (2222,40) std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U>::__libcpp_compressed_pair_imp(std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U> *, std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U>::_T1_param) (isz = 6) (sz = 13)
              -> DELETED: (2222,40) std::__1::allocator<delta::collision::contactpoint>::allocator(std::__1::allocator<delta::collision::contactpoint> *const) (isz = 0) (sz = 5)
              -> INLINE (MANUAL): (2223,20) std::__1::forward<std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::_T1_param>(std::__1::remove_reference<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer>::type &) (isz = 0) (sz = 6)
  -> (41,29) std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::~vector(std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *) (isz = 48) (sz = 53)
     [[ Callee not marked with inlining pragma  <2>]]
  -> EXTERN: (44,16) delta::collision::contactpoint::contactpoint(delta::collision::contactpoint *)
  -> EXTERN: (52,55) operator new[](size_t)
  -> EXTERN: (53,55) operator new[](size_t)
  -> INLINE: (74,3) delta::collision::gjk(double *, int, double *, int, double *, double *) (isz = 324) (sz = 341)
    -> INLINE (MANUAL): (429,14) minimal_support_point(double *, int, double *) (isz = 29) (sz = 40)
    -> INLINE (MANUAL): (430,14) maximal_support_point(double *, int, double *) (isz = 29) (sz = 40)
    -> (437,11) project(point *, int, double *, double *) (isz = 337) (sz = 352)
       [[ Inlining would exceed -inline-max-size value (352>230) <1>]]
  -> EXTERN: (84,3) operator delete(void *)
  -> EXTERN: (85,3) operator delete(void *)
  -> EXTERN: (87,82) delta::collision::contactpoint::contactpoint(delta::collision::contactpoint *, const double &, const double &, const double &, const double &, const double &, const double &, const double &, const double &, const int &)
  -> EXTERN: (88,3) printf(const char *, ...)
  -> EXTERN: (88,44) delta::collision::contactpoint::getDistance(const delta::collision::contactpoint *) const
  -> EXTERN: (89,22) delta::collision::contactpoint::getDistance(const delta::collision::contactpoint *) const
  -> EXTERN: (91,27) memcpy(void *, const void *, size_t)
  -> EXTERN: (92,43) delta::collision::contactpoint::getDistance(const delta::collision::contactpoint *) const
  -> EXTERN: (94,27) delta::collision::contactpoint::getDistance(const delta::collision::contactpoint *) const
  -> INLINE (MANUAL): (95,12) std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::push_back(std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::const_reference) (isz = 348) (sz = 355)
    -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector:(1583,31) std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__end_cap(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *) (isz = 7) (sz = 14)
      -> INLINE (MANUAL): (356,28) std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::first(std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type> *) (isz = 3) (sz = 10)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:(2455,83) std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U>::first(std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U> *) (isz = 1) (sz = 7)
    -> DELETED: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector:(1585,47) std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__RAII_IncreaseAnnotator::__RAII_IncreaseAnnotator(std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__RAII_IncreaseAnnotator *, const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> &, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type) (isz = 0) (sz = 5)
    -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector:(1586,9) std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::construct<delta::collision::contactpoint, const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &>(std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::allocator_type &, delta::collision::contactpoint *, const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &) (isz = 6) (sz = 15)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:(1493,14) std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::__construct<delta::collision::contactpoint, const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &>(std::__1::true_type, std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::allocator_type &, delta::collision::contactpoint *, const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &) (isz = 2) (sz = 13)
        -> INLINE (MANUAL): (1647,18) std::__1::allocator<delta::collision::contactpoint>::construct<delta::collision::contactpoint, const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &>(std::__1::allocator<delta::collision::contactpoint> *, delta::collision::contactpoint *, const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &) (isz = 21) (sz = 30)
          -> DELETED: (1731,13) operator delete(void *, void *) (isz = 0) (sz = 4)
          -> INLINE (MANUAL): (1731,26) operator new(size_t, void *) (isz = 0) (sz = 7)
          -> EXTERN: (1731,35) delta::collision::contactpoint::contactpoint(delta::collision::contactpoint *, const delta::collision::contactpoint &)
          -> INLINE (MANUAL): (1731,35) std::__1::forward<const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &>(std::__1::remove_reference<const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &>::type &) (isz = 0) (sz = 6)
        -> INLINE (MANUAL): (1647,33) std::__1::forward<const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &>(std::__1::remove_reference<const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &>::type &) (isz = 0) (sz = 6)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:(1494,36) std::__1::forward<const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &>(std::__1::remove_reference<const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &>::type &) (isz = 0) (sz = 6)
    -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector:(1586,41) std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__alloc(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *) (isz = 6) (sz = 13)
      -> INLINE (MANUAL): (350,28) std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::second(std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type> *) (isz = 2) (sz = 9)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:(2458,84) std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U>::second(std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U> *) (isz = 0) (sz = 6)
    -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector:(1587,35) std::__1::__to_raw_pointer<delta::collision::contactpoint>(delta::collision::contactpoint *) (isz = 0) (sz = 6)
    -> DELETED: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector:(1588,21) std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__RAII_IncreaseAnnotator::__done(std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__RAII_IncreaseAnnotator *) (isz = 0) (sz = 3)
    -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector:(1592,9) std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__push_back_slow_path<const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &>(std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *, const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &) (isz = 305) (sz = 312)
      -> INLINE (MANUAL): (1570,33) std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__alloc(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *) (isz = 6) (sz = 13)
        -> INLINE (MANUAL): (350,28) std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::second(std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type> *) (isz = 2) (sz = 9)
          -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:(2458,84) std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U>::second(std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U> *) (isz = 0) (sz = 6)
      -> INLINE (MANUAL): (1571,53) std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__recommend(const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type) const (isz = 78) (sz = 88)
        -> INLINE (MANUAL): (958,28) std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::max_size(const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *) const (isz = 38) (sz = 45)
          -> EXTERN: (948,1) ___cxa_call_unexpected
          -> INLINE (MANUAL): (949,12) std::__1::min<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type>(const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type &, const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type &) (isz = 3) (sz = 12)
            -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm:(2591,12) std::__1::min<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type, std::__1::__less<unsigned long, unsigned long>>(const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type &, const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type &, std::__1::__less<unsigned long, unsigned long>) (isz = 8) (sz = 19)
              -> INLINE (MANUAL): (2583,18) std::__1::__less<unsigned long, unsigned long>::operator()(const std::__1::__less<unsigned long, unsigned long> *, const unsigned long &, const unsigned long &) const (isz = 1) (sz = 11)
          -> INLINE (MANUAL): (949,34) std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::max_size(const std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::allocator_type &) (isz = 11) (sz = 18)
            -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:(1531,9) ___cxa_call_unexpected
            -> DELETED: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:(1531,17) std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::__max_size(std::__1::true_type, const std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::allocator_type &) (isz = 0) (sz = 9)
          -> INLINE (MANUAL): (949,65) std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__alloc(const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *) const (isz = 6) (sz = 13)
            -> INLINE (MANUAL): (353,28) std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::second(const std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type> *) const (isz = 2) (sz = 9)
              -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:(2459,84) std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U>::second(const std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U> *) const (isz = 0) (sz = 6)
        -> EXTERN: (960,15) std::__1::__vector_base_common<true>::__throw_length_error(const std::__1::__vector_base_common<true> *) const
        -> INLINE (MANUAL): (961,29) std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::capacity(const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *) const (isz = 17) (sz = 24)
          -> INLINE (MANUAL): (644,17) std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::capacity(const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *) const (isz = 15) (sz = 22)
            -> INLINE (MANUAL): (371,40) std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__end_cap(const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *) const (isz = 7) (sz = 14)
              -> INLINE (MANUAL): (359,28) std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::first(const std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type> *) const (isz = 3) (sz = 10)
                -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:(2456,83) std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U>::first(const std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U> *) const (isz = 1) (sz = 7)
        -> INLINE (MANUAL): (964,12) std::__1::max<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type>(const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type &, const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type &) (isz = 3) (sz = 12)
          -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm:(2656,12) std::__1::max<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type, std::__1::__less<unsigned long, unsigned long>>(const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type &, const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type &, std::__1::__less<unsigned long, unsigned long>) (isz = 8) (sz = 19)
            -> INLINE (MANUAL): (2648,18) std::__1::__less<unsigned long, unsigned long>::operator()(const std::__1::__less<unsigned long, unsigned long> *, const unsigned long &, const unsigned long &) const (isz = 1) (sz = 11)
      -> INLINE (MANUAL): (1571,65) std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size(const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *) const (isz = 5) (sz = 12)
      -> INLINE (MANUAL): (1571,78) std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size(const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *) const (isz = 5) (sz = 12)
      -> INLINE (MANUAL): (1571,86) std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::__split_buffer(std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &> *, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::size_type, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::size_type, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::__alloc_rr &) (isz = 63) (sz = 74)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__split_buffer:(304,27) std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type>::__compressed_pair(std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type> *, std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type>::_T1_param, std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type>::_T2_param) (isz = 16) (sz = 25)
          -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:(2406,16) std::__1::forward<std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::_T1_param>(std::__1::remove_reference<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer>::type &) (isz = 0) (sz = 6)
          -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:(2406,49) std::__1::forward<std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type>::_T2_param>(std::__1::remove_reference<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::type &) (isz = 0) (sz = 6)
          -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:(2406,49) std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U>::__libcpp_compressed_pair_imp(std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U> *const, std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U>::_T1_param, std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U>::_T2_param) (isz = 8) (sz = 17)
            -> INLINE (MANUAL): (2043,31) std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U>::__libcpp_compressed_pair_imp(std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U> *, std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U>::_T1_param, std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U>::_T2_param) (isz = 8) (sz = 17)
              -> INLINE (MANUAL): (2044,20) std::__1::forward<std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::_T1_param>(std::__1::remove_reference<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer>::type &) (isz = 0) (sz = 6)
              -> INLINE (MANUAL): (2044,64) std::__1::forward<std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type>::_T2_param>(std::__1::remove_reference<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::type &) (isz = 0) (sz = 6)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__split_buffer:(306,29) std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::allocate(std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::allocator_type &, std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::size_type) (isz = 3) (sz = 12)
          -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:(1479,21) std::__1::allocator<delta::collision::contactpoint>::allocate(std::__1::allocator<delta::collision::contactpoint> *, std::__1::allocator<delta::collision::contactpoint>::size_type, std::__1::allocator<void>::const_pointer) (isz = 1) (sz = 12)
            -> INLINE (MANUAL): (1720,38) std::__1::__allocate(size_t) (isz = 1) (sz = 8)
              -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/new:(166,10) operator new(size_t)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__split_buffer:(306,54) std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::__alloc(std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &> *) (isz = 6) (sz = 13)
          -> INLINE (MANUAL): (54,100) std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type>::second(std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type> *) (isz = 2) (sz = 9)
            -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:(2458,84) std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U>::second(std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U> *) (isz = 0) (sz = 7)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__split_buffer:(308,5) std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::__end_cap(std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &> *) (isz = 7) (sz = 14)
          -> INLINE (MANUAL): (56,100) std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type>::first(std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type> *) (isz = 3) (sz = 10)
            -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:(2455,83) std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U>::first(std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U> *) (isz = 1) (sz = 7)
      -> (1571,86) std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::~__split_buffer(std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &> *) (isz = 54) (sz = 59)
         [[ Unable to inline callsite  <3>]]
      -> INLINE (MANUAL): (1573,5) std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::construct<delta::collision::contactpoint, const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &>(std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::allocator_type &, delta::collision::contactpoint *, const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &) (isz = 6) (sz = 15)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:(1493,14) std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::__construct<delta::collision::contactpoint, const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &>(std::__1::true_type, std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::allocator_type &, delta::collision::contactpoint *, const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &) (isz = 2) (sz = 13)
          -> INLINE (MANUAL): (1647,18) std::__1::allocator<delta::collision::contactpoint>::construct<delta::collision::contactpoint, const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &>(std::__1::allocator<delta::collision::contactpoint> *, delta::collision::contactpoint *, const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &) (isz = 21) (sz = 30)
            -> DELETED: (1731,13) operator delete(void *, void *) (isz = 0) (sz = 4)
            -> INLINE (MANUAL): (1731,26) operator new(size_t, void *) (isz = 0) (sz = 7)
            -> EXTERN: (1731,35) delta::collision::contactpoint::contactpoint(delta::collision::contactpoint *, const delta::collision::contactpoint &)
            -> INLINE (MANUAL): (1731,35) std::__1::forward<const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &>(std::__1::remove_reference<const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &>::type &) (isz = 0) (sz = 6)
          -> INLINE (MANUAL): (1647,33) std::__1::forward<const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &>(std::__1::remove_reference<const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &>::type &) (isz = 0) (sz = 6)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:(1494,36) std::__1::forward<const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &>(std::__1::remove_reference<const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &>::type &) (isz = 0) (sz = 6)
      -> INLINE (MANUAL): (1573,36) std::__1::__to_raw_pointer<delta::collision::contactpoint>(delta::collision::contactpoint *) (isz = 0) (sz = 6)
      -> INLINE (MANUAL): (1573,73) std::__1::forward<const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &>(std::__1::remove_reference<const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &>::type &) (isz = 0) (sz = 6)
      -> INLINE (MANUAL): (1575,5) std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__swap_out_circular_buffer(std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &> &) (isz = 70) (sz = 77)
        -> DELETED: (888,5) std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__annotate_delete(const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *) const (isz = 82) (sz = 87)
        -> INLINE (MANUAL): (889,5) std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::__construct_backward<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer>(std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::allocator_type &, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer &) (isz = 21) (sz = 32)
          -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:(1609,17) std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::construct<delta::collision::contactpoint, const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &>(std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::allocator_type &, delta::collision::contactpoint *, const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &) (isz = 6) (sz = 15)
            -> INLINE (MANUAL): (1493,14) std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::__construct<delta::collision::contactpoint, const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &>(std::__1::true_type, std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::allocator_type &, delta::collision::contactpoint *, const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &) (isz = 2) (sz = 13)
              -> INLINE (MANUAL): (1647,18) std::__1::allocator<delta::collision::contactpoint>::construct<delta::collision::contactpoint, const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &>(std::__1::allocator<delta::collision::contactpoint> *, delta::collision::contactpoint *, const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &) (isz = 21) (sz = 30)
                -> DELETED: (1731,13) operator delete(void *, void *) (isz = 0) (sz = 4)
                -> INLINE (MANUAL): (1731,26) operator new(size_t, void *) (isz = 0) (sz = 7)
                -> EXTERN: (1731,35) delta::collision::contactpoint::contactpoint(delta::collision::contactpoint *, const delta::collision::contactpoint &)
                -> INLINE (MANUAL): (1731,35) std::__1::forward<const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &>(std::__1::remove_reference<const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &>::type &) (isz = 0) (sz = 6)
              -> INLINE (MANUAL): (1647,33) std::__1::forward<const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &>(std::__1::remove_reference<const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &>::type &) (isz = 0) (sz = 6)
            -> INLINE (MANUAL): (1494,36) std::__1::forward<const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &>(std::__1::remove_reference<const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type &>::type &) (isz = 0) (sz = 6)
          -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:(1609,32) std::__1::__to_raw_pointer<delta::collision::contactpoint>(delta::collision::contactpoint *) (isz = 0) (sz = 6)
          -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:(1609,67) std::__1::move_if_noexcept<delta::collision::contactpoint>(delta::collision::contactpoint &) (isz = 2) (sz = 9)
            -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/utility:(242,12) std::__1::move<delta::collision::contactpoint &>(delta::collision::contactpoint &) (isz = 0) (sz = 6)
        -> INLINE (MANUAL): (889,48) std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__alloc(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *) (isz = 6) (sz = 13)
          -> INLINE (MANUAL): (350,28) std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::second(std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type> *) (isz = 2) (sz = 9)
            -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:(2458,84) std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U>::second(std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U> *) (isz = 0) (sz = 6)
        -> INLINE (MANUAL): (890,5) std::__1::swap<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer>(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer &, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer &) (isz = 15) (sz = 22)
          -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/type_traits:(3597,13) std::__1::move<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer &>(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer &) (isz = 0) (sz = 6)
          -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/type_traits:(3598,11) std::__1::move<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer &>(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer &) (isz = 0) (sz = 6)
          -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/type_traits:(3599,11) std::__1::move<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer &>(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer &) (isz = 0) (sz = 6)
        -> INLINE (MANUAL): (891,5) std::__1::swap<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer>(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer &, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer &) (isz = 15) (sz = 22)
          -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/type_traits:(3597,13) std::__1::move<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer &>(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer &) (isz = 0) (sz = 6)
          -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/type_traits:(3598,11) std::__1::move<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer &>(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer &) (isz = 0) (sz = 6)
          -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/type_traits:(3599,11) std::__1::move<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer &>(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer &) (isz = 0) (sz = 6)
        -> INLINE (MANUAL): (892,5) std::__1::swap<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer>(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer &, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer &) (isz = 15) (sz = 22)
          -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/type_traits:(3597,13) std::__1::move<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer &>(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer &) (isz = 0) (sz = 6)
          -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/type_traits:(3598,11) std::__1::move<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer &>(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer &) (isz = 0) (sz = 6)
          -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/type_traits:(3599,11) std::__1::move<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer &>(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer &) (isz = 0) (sz = 6)
        -> INLINE (MANUAL): (892,23) std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__end_cap(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *) (isz = 7) (sz = 14)
          -> INLINE (MANUAL): (356,28) std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::first(std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type> *) (isz = 3) (sz = 10)
            -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:(2455,83) std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U>::first(std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U> *) (isz = 1) (sz = 7)
        -> INLINE (MANUAL): (892,40) std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::__end_cap(std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &> *) (isz = 7) (sz = 14)
          -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__split_buffer:(56,100) std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type>::first(std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type> *) (isz = 3) (sz = 10)
            -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:(2455,83) std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U>::first(std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U> *) (isz = 1) (sz = 7)
        -> DELETED: (894,5) std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__annotate_new(const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type) const (isz = 73) (sz = 80)
        -> INLINE (MANUAL): (894,20) std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size(const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *) const (isz = 5) (sz = 12)
        -> DELETED: (895,5) std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__invalidate_all_iterators(std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *) (isz = 0) (sz = 3)
      -> INLINE (MANUAL): (1575,5) std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::~__split_buffer(std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &> *) (isz = 54) (sz = 59)
        -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__split_buffer:(335,1) ___cxa_call_unexpected
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__split_buffer:(336,5) std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::clear(std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &> *) (isz = 9) (sz = 14)
          -> INLINE (MANUAL): (83,10) std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::__destruct_at_end(std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &> *, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer) (isz = 7) (sz = 14)
            -> INLINE (MANUAL): (136,10) std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::__destruct_at_end(std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &> *, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::false_type) (isz = 30) (sz = 39)
              -> EXTERN: (289,1) ___cxa_call_unexpected
              -> DELETED: (291,9) std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::destroy<delta::collision::contactpoint>(std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::allocator_type &, delta::collision::contactpoint *) (isz = 3) (sz = 10)
              -> INLINE (MANUAL): (291,33) std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::__alloc(std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &> *) (isz = 6) (sz = 13)
                -> INLINE (MANUAL): (54,100) std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type>::second(std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type> *) (isz = 2) (sz = 9)
                  -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:(2458,84) std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U>::second(std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U> *) (isz = 0) (sz = 7)
              -> INLINE (MANUAL): (291,44) std::__1::__to_raw_pointer<delta::collision::contactpoint>(delta::collision::contactpoint *) (isz = 0) (sz = 6)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__split_buffer:(338,9) std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::deallocate(std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::allocator_type &, std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::pointer, std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::size_type) (isz = 5) (sz = 14)
          -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:(1487,14) std::__1::allocator<delta::collision::contactpoint>::deallocate(std::__1::allocator<delta::collision::contactpoint> *, std::__1::allocator<delta::collision::contactpoint>::pointer, std::__1::allocator<delta::collision::contactpoint>::size_type) (isz = 5) (sz = 12)
            -> EXTERN: (1722,9) ___cxa_call_unexpected
            -> INLINE (MANUAL): (1722,10) std::__1::__deallocate(void *) (isz = 0) (sz = 5)
              -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/new:(174,3) operator delete(void *)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__split_buffer:(338,36) std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::__alloc(std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &> *) (isz = 6) (sz = 13)
          -> INLINE (MANUAL): (54,100) std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type>::second(std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type> *) (isz = 2) (sz = 9)
            -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:(2458,84) std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U>::second(std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U> *) (isz = 0) (sz = 7)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__split_buffer:(338,57) std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::capacity(const std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &> *) const (isz = 14) (sz = 21)
          -> INLINE (MANUAL): (86,89) std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::__end_cap(const std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &> *) const (isz = 7) (sz = 14)
            -> INLINE (MANUAL): (57,100) std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type>::first(const std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type> *) const (isz = 3) (sz = 10)
              -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:(2456,83) std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U>::first(const std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U> *) const (isz = 1) (sz = 7)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at delta/collision/gjk.cpp(57,3)
<Peeled loop for vectorization>
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at delta/collision/gjk.cpp(57,3)
   remark #15389: vectorization support: reference xCoordinatesOfPointsOfGeometryA has unaligned access   [ delta/collision/gjk.cpp(59,5) ]
   remark #15389: vectorization support: reference yCoordinatesOfPointsOfGeometryA has unaligned access   [ delta/collision/gjk.cpp(60,5) ]
   remark #15389: vectorization support: reference zCoordinatesOfPointsOfGeometryA has unaligned access   [ delta/collision/gjk.cpp(61,5) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15329: vectorization support: scatter was emulated for the variable a:  strided by 3   [ delta/collision/gjk.cpp(59,5) ]
   remark #15329: vectorization support: scatter was emulated for the variable a:  strided by 3   [ delta/collision/gjk.cpp(60,5) ]
   remark #15329: vectorization support: scatter was emulated for the variable a:  strided by 3   [ delta/collision/gjk.cpp(61,5) ]
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.115
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15450: unmasked unaligned unit stride loads: 3 
   remark #15462: unmasked indexed (or gather) loads: 3 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 23 
   remark #15477: vector loop cost: 9.250 
   remark #15478: estimated potential speedup: 2.330 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at delta/collision/gjk.cpp(57,3)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference xCoordinatesOfPointsOfGeometryA has unaligned access   [ delta/collision/gjk.cpp(59,5) ]
   remark #15389: vectorization support: reference yCoordinatesOfPointsOfGeometryA has unaligned access   [ delta/collision/gjk.cpp(60,5) ]
   remark #15389: vectorization support: reference zCoordinatesOfPointsOfGeometryA has unaligned access   [ delta/collision/gjk.cpp(61,5) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 0.500
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at delta/collision/gjk.cpp(57,3)
<Remainder loop for vectorization>
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at delta/collision/gjk.cpp(66,3)
<Peeled loop for vectorization>
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at delta/collision/gjk.cpp(66,3)
   remark #15389: vectorization support: reference xCoordinatesOfPointsOfGeometryB has unaligned access   [ delta/collision/gjk.cpp(68,5) ]
   remark #15389: vectorization support: reference yCoordinatesOfPointsOfGeometryB has unaligned access   [ delta/collision/gjk.cpp(69,5) ]
   remark #15389: vectorization support: reference zCoordinatesOfPointsOfGeometryB has unaligned access   [ delta/collision/gjk.cpp(70,5) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15329: vectorization support: scatter was emulated for the variable b:  strided by 3   [ delta/collision/gjk.cpp(68,5) ]
   remark #15329: vectorization support: scatter was emulated for the variable b:  strided by 3   [ delta/collision/gjk.cpp(69,5) ]
   remark #15329: vectorization support: scatter was emulated for the variable b:  strided by 3   [ delta/collision/gjk.cpp(70,5) ]
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.115
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15450: unmasked unaligned unit stride loads: 3 
   remark #15462: unmasked indexed (or gather) loads: 3 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 23 
   remark #15477: vector loop cost: 9.250 
   remark #15478: estimated potential speedup: 2.330 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at delta/collision/gjk.cpp(66,3)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference xCoordinatesOfPointsOfGeometryB has unaligned access   [ delta/collision/gjk.cpp(68,5) ]
   remark #15389: vectorization support: reference yCoordinatesOfPointsOfGeometryB has unaligned access   [ delta/collision/gjk.cpp(69,5) ]
   remark #15389: vectorization support: reference zCoordinatesOfPointsOfGeometryB has unaligned access   [ delta/collision/gjk.cpp(70,5) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 0.500
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at delta/collision/gjk.cpp(66,3)
<Remainder loop for vectorization>
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at delta/collision/gjk.cpp(427,3) inlined into delta/collision/gjk.cpp(74,3)
   remark #15523: loop was not vectorized: loop control variable _j was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at delta/collision/gjk.cpp(147,3) inlined into delta/collision/gjk.cpp(74,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization   [ delta/collision/gjk.cpp(150,38) ]
      remark #15346: vector dependence: assumed ANTI dependence between _dot line 150 and _dot line 149   [ delta/collision/gjk.cpp(150,38) ]
      remark #15346: vector dependence: assumed FLOW dependence between _dot line 149 and _dot line 150   [ delta/collision/gjk.cpp(150,38) ]
      remark #15346: vector dependence: assumed FLOW dependence between _dot line 149 and _dot line 150   [ delta/collision/gjk.cpp(150,38) ]
   LOOP END

   LOOP BEGIN at delta/collision/gjk.cpp(161,3) inlined into delta/collision/gjk.cpp(74,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization   [ delta/collision/gjk.cpp(164,38) ]
      remark #15346: vector dependence: assumed ANTI dependence between _dot line 164 and _dot line 163   [ delta/collision/gjk.cpp(164,38) ]
      remark #15346: vector dependence: assumed FLOW dependence between _dot line 163 and _dot line 164   [ delta/collision/gjk.cpp(164,38) ]
      remark #15346: vector dependence: assumed FLOW dependence between _dot line 163 and _dot line 164   [ delta/collision/gjk.cpp(164,38) ]
   LOOP END
LOOP END

LOOP BEGIN at delta/collision/gjk.cpp(446,5) inlined into delta/collision/gjk.cpp(74,3)
   remark #25453: Loop Reversed
   remark #15388: vectorization support: reference _l has aligned access   [ delta/collision/gjk.cpp(448,7) ]
   remark #15388: vectorization support: reference _l has aligned access   [ delta/collision/gjk.cpp(448,7) ]
   remark #15388: vectorization support: reference _l has aligned access   [ delta/collision/gjk.cpp(448,7) ]
   remark #15388: vectorization support: reference _l has aligned access   [ delta/collision/gjk.cpp(449,7) ]
   remark #15388: vectorization support: reference _l has aligned access   [ delta/collision/gjk.cpp(449,7) ]
   remark #15388: vectorization support: reference _l has aligned access   [ delta/collision/gjk.cpp(449,7) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 0.672
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 6 
   remark #15460: masked strided loads: 6 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 54 
   remark #15477: vector loop cost: 58.000 
   remark #15478: estimated potential speedup: 0.690 
   remark #15488: --- end vector loop cost summary ---
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 5
   remark #25015: Estimate of max trip count of loop=4
LOOP END

LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1607,13) inlined into delta/collision/gjk.cpp(95,12)
   remark #15523: loop was not vectorized: loop control variable __end1_15490 was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

delta/collision/gjk.cpp(91,27):remark #34000: call to _memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (32, 0)
===========================================================================

Begin optimization report for: std::__1::allocator<delta::collision::contactpoint>::allocator(std::__1::allocator<delta::collision::contactpoint> *const)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::allocator<delta::collision::contactpoint>::allocator(std::__1::allocator<delta::collision::contactpoint> *const)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1713,31)

===========================================================================

Begin optimization report for: std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::~vector(std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::~vector(std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *)) [105/115=91.3%] /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(457,29)
  -> INLINE (MANUAL): (457,29) std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::~__vector_base(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *const) (isz = 48) (sz = 53)
    -> INLINE (MANUAL): (365,5) std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::~__vector_base(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *) (isz = 48) (sz = 53)
      -> INLINE (MANUAL): (451,9) std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::clear(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *) (isz = 8) (sz = 13)
        -> INLINE (MANUAL): (368,29) std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__destruct_at_end(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer) (isz = 31) (sz = 38)
          -> EXTERN: (422,1) ___cxa_call_unexpected
          -> DELETED: (424,9) std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::destroy<delta::collision::contactpoint>(std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::allocator_type &, delta::collision::contactpoint *) (isz = 3) (sz = 10)
          -> INLINE (MANUAL): (424,33) std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__alloc(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *) (isz = 6) (sz = 13)
            -> INLINE (MANUAL): (350,28) std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::second(std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type> *) (isz = 2) (sz = 9)
              -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:(2458,84) std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U>::second(std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U> *) (isz = 0) (sz = 6)
          -> INLINE (MANUAL): (424,44) std::__1::__to_raw_pointer<delta::collision::contactpoint>(delta::collision::contactpoint *) (isz = 0) (sz = 6)
      -> INLINE (MANUAL): (452,9) std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::deallocate(std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::allocator_type &, std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::pointer, std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::size_type) (isz = 5) (sz = 14)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:(1487,14) std::__1::allocator<delta::collision::contactpoint>::deallocate(std::__1::allocator<delta::collision::contactpoint> *, std::__1::allocator<delta::collision::contactpoint>::pointer, std::__1::allocator<delta::collision::contactpoint>::size_type) (isz = 5) (sz = 12)
          -> EXTERN: (1722,9) ___cxa_call_unexpected
          -> INLINE (MANUAL): (1722,10) std::__1::__deallocate(void *) (isz = 0) (sz = 5)
            -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/new:(174,3) operator delete(void *)
      -> INLINE (MANUAL): (452,36) std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__alloc(std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *) (isz = 6) (sz = 13)
        -> INLINE (MANUAL): (350,28) std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::second(std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type> *) (isz = 2) (sz = 9)
          -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:(2458,84) std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U>::second(std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U> *) (isz = 0) (sz = 6)
      -> INLINE (MANUAL): (452,57) std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::capacity(const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *) const (isz = 15) (sz = 22)
        -> INLINE (MANUAL): (371,40) std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__end_cap(const std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *) const (isz = 7) (sz = 14)
          -> INLINE (MANUAL): (359,28) std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::first(const std::__1::__compressed_pair<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type> *) const (isz = 3) (sz = 10)
            -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:(2456,83) std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U>::first(const std::__1::__libcpp_compressed_pair_imp<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::pointer, std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type, 2U> *) const (isz = 1) (sz = 7)

===========================================================================

Begin optimization report for: std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::destroy<delta::collision::contactpoint>(std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::allocator_type &, delta::collision::contactpoint *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::destroy<delta::collision::contactpoint>(std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::allocator_type &, delta::collision::contactpoint *)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1527,13)

===========================================================================

Begin optimization report for: std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__RAII_IncreaseAnnotator::__done(std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__RAII_IncreaseAnnotator *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__RAII_IncreaseAnnotator::__done(std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__RAII_IncreaseAnnotator *)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(878,28)

===========================================================================

Begin optimization report for: std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::~__split_buffer(std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &> *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::~__split_buffer(std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &> *)) [108/115=93.9%] /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__split_buffer(335,1)
  -> EXTERN: (335,1) ___cxa_call_unexpected
  -> INLINE (MANUAL): (336,5) std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::clear(std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &> *) (isz = 9) (sz = 14)
    -> INLINE (MANUAL): (83,10) std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::__destruct_at_end(std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &> *, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer) (isz = 7) (sz = 14)
      -> INLINE (MANUAL): (136,10) std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::__destruct_at_end(std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &> *, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::false_type) (isz = 30) (sz = 39)
        -> EXTERN: (289,1) ___cxa_call_unexpected
        -> DELETED: (291,9) std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::destroy<delta::collision::contactpoint>(std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::allocator_type &, delta::collision::contactpoint *) (isz = 3) (sz = 10)
        -> INLINE (MANUAL): (291,33) std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::__alloc(std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &> *) (isz = 6) (sz = 13)
          -> INLINE (MANUAL): (54,100) std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type>::second(std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type> *) (isz = 2) (sz = 9)
            -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:(2458,84) std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U>::second(std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U> *) (isz = 0) (sz = 7)
        -> INLINE (MANUAL): (291,44) std::__1::__to_raw_pointer<delta::collision::contactpoint>(delta::collision::contactpoint *) (isz = 0) (sz = 6)
  -> INLINE (MANUAL): (338,9) std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::deallocate(std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::allocator_type &, std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::pointer, std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::size_type) (isz = 5) (sz = 14)
    -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:(1487,14) std::__1::allocator<delta::collision::contactpoint>::deallocate(std::__1::allocator<delta::collision::contactpoint> *, std::__1::allocator<delta::collision::contactpoint>::pointer, std::__1::allocator<delta::collision::contactpoint>::size_type) (isz = 5) (sz = 12)
      -> EXTERN: (1722,9) ___cxa_call_unexpected
      -> INLINE (MANUAL): (1722,10) std::__1::__deallocate(void *) (isz = 0) (sz = 5)
        -> EXTERN: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/new:(174,3) operator delete(void *)
  -> INLINE (MANUAL): (338,36) std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::__alloc(std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &> *) (isz = 6) (sz = 13)
    -> INLINE (MANUAL): (54,100) std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type>::second(std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type> *) (isz = 2) (sz = 9)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:(2458,84) std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U>::second(std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U> *) (isz = 0) (sz = 7)
  -> INLINE (MANUAL): (338,57) std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::capacity(const std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &> *) const (isz = 14) (sz = 21)
    -> INLINE (MANUAL): (86,89) std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::__end_cap(const std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &> *) const (isz = 7) (sz = 14)
      -> INLINE (MANUAL): (57,100) std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type>::first(const std::__1::__compressed_pair<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type> *) const (isz = 3) (sz = 10)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:(2456,83) std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U>::first(const std::__1::__libcpp_compressed_pair_imp<std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::pointer, std::__1::__split_buffer<std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::value_type, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type &>::allocator_type, 0U> *) const (isz = 1) (sz = 7)

===========================================================================

Begin optimization report for: std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__annotate_delete(const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__annotate_delete(const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *) const) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(844,5)

===========================================================================

Begin optimization report for: std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__annotate_new(const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__annotate_new(const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type) const) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(839,5)

===========================================================================

Begin optimization report for: operator delete(void *, void *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (operator delete(void *, void *)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/new(159,82)

===========================================================================

Begin optimization report for: std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::__max_size(std::__1::true_type, const std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::allocator_type &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::__max_size(std::__1::true_type, const std::__1::allocator_traits<std::__1::__vector_base<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::allocator_type>::allocator_type &)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1669,13)

===========================================================================

Begin optimization report for: std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__RAII_IncreaseAnnotator::__RAII_IncreaseAnnotator(std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__RAII_IncreaseAnnotator *, const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> &, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__RAII_IncreaseAnnotator::__RAII_IncreaseAnnotator(std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__RAII_IncreaseAnnotator *, const std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> &, std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::size_type)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(877,74)

===========================================================================

Begin optimization report for: delta::collision::gjk(double *, int, double *, int, double *, double *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (delta::collision::gjk(double *, int, double *, int, double *, double *)) [114/115=99.1%] delta/collision/gjk.cpp(418,1)
  -> INLINE (MANUAL): (429,14) minimal_support_point(double *, int, double *) (isz = 29) (sz = 40)
  -> INLINE (MANUAL): (430,14) maximal_support_point(double *, int, double *) (isz = 29) (sz = 40)
  -> (437,11) project(point *, int, double *, double *) (isz = 337) (sz = 352)
     [[ Inlining would exceed -inline-max-size value (352>230) <1>]]


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at delta/collision/gjk.cpp(427,3)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at delta/collision/gjk.cpp(147,3) inlined into delta/collision/gjk.cpp(429,14)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization   [ delta/collision/gjk.cpp(150,38) ]
      remark #15346: vector dependence: assumed ANTI dependence between _dot line 150 and _dot line 149   [ delta/collision/gjk.cpp(150,38) ]
      remark #15346: vector dependence: assumed FLOW dependence between _dot line 149 and _dot line 150   [ delta/collision/gjk.cpp(150,38) ]
      remark #15346: vector dependence: assumed FLOW dependence between _dot line 149 and _dot line 150   [ delta/collision/gjk.cpp(150,38) ]
   LOOP END

   LOOP BEGIN at delta/collision/gjk.cpp(161,3) inlined into delta/collision/gjk.cpp(430,14)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization   [ delta/collision/gjk.cpp(164,38) ]
      remark #15346: vector dependence: assumed ANTI dependence between _dot line 164 and _dot line 163   [ delta/collision/gjk.cpp(164,38) ]
      remark #15346: vector dependence: assumed FLOW dependence between _dot line 163 and _dot line 164   [ delta/collision/gjk.cpp(164,38) ]
      remark #15346: vector dependence: assumed FLOW dependence between _dot line 163 and _dot line 164   [ delta/collision/gjk.cpp(164,38) ]
   LOOP END
LOOP END

LOOP BEGIN at delta/collision/gjk.cpp(446,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between p line 448 and q line 449
   remark #15346: vector dependence: assumed OUTPUT dependence between q line 449 and p line 448
   remark #25015: Estimate of max trip count of loop=4
LOOP END
===========================================================================

Begin optimization report for: std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__invalidate_all_iterators(std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>>::__invalidate_all_iterators(std::__1::vector<delta::collision::contactpoint, std::__1::allocator<delta::collision::contactpoint>> *)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(2093,1)

===========================================================================

    Report from: Interprocedural optimizations [ipo]

INLINING FOOTNOTES:

<1> The function is larger than the inliner would normally inline.  Use the
    option -inline-max-size to increase the size of any function that would
    normally be inlined, add "inline __attribute__((always_inline))" to the
    declaration of the called function, or add "#pragma forceinline" before
    the call site.

<2> The compiler's heuristics indicate that the function is not profitable to 
    inline.  Override this decision by adding "inline 
    __attribute__((always_inline))" to the declaration of the called function, 
    or add "#pragma forceinline" before the call site.

<3> Inlining the function will lead to incorrect program behavior.

