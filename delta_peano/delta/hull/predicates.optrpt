Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C++ Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 17.0.0.098 Build 20160721

Compiler options: -I. --std=c++11 -DDim3 -DiREAL=double -DbyteAlignment=32 -DTrackGridStatistics -fast -qopt-report=5 -fstrict-aliasing -restrict -fno-rtti -no-ipo -ip -xHost -c -o delta/hull/predicates.o

    Report from: Interprocedural optimizations [ipo]

  WHOLE PROGRAM (SAFE) [EITHER METHOD]: false
  WHOLE PROGRAM (SEEN) [TABLE METHOD]: false
  WHOLE PROGRAM (READ) [OBJECT READER METHOD]: false

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: disabled
  -inline-max-per-compile: disabled

In the inlining report below:
   "sz" refers to the "size" of the routine. The smaller a routine's size,
      the more likely it is to be inlined.
   "isz" refers to the "inlined size" of the routine. This is the amount
      the calling routine will grow if the called routine is inlined into it.
      The compiler generally limits the amount a routine can grow by having
      routines inlined into it.

Begin optimization report for: delta::hull::estimate(int, double *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (delta::hull::estimate(int, double *)) delta/hull/predicates.cpp(664,1)

===========================================================================

Begin optimization report for: delta::hull::orient2dadapt(double *, double *, double *, double)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (delta::hull::orient2dadapt(double *, double *, double *, double)) delta/hull/predicates.cpp(702,1)

===========================================================================

Begin optimization report for: delta::hull::orient2d(double *, double *, double *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (delta::hull::orient2d(double *, double *, double *)) [3/13=23.1%] delta/hull/predicates.cpp(785,3)
  -> INLINE: (821,12) delta::hull::orient2dadapt(double *, double *, double *, double) (isz = 1249) (sz = 1265)
    -> INLINE: (737,9) delta::hull::estimate(int, double *) (isz = 14) (sz = 23)
    -> INLINE: (764,14) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
    -> INLINE: (770,14) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
    -> INLINE: (776,13) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at delta/hull/predicates.cpp(669,3) inlined into delta/hull/predicates.cpp(821,12)
   remark #15389: vectorization support: reference B[eindex] has unaligned access   [ delta/hull/predicates.cpp(737,21) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 3.167
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 6 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.580 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 3  
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(564,5) inlined into delta/hull/predicates.cpp(821,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(578,3) inlined into delta/hull/predicates.cpp(821,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between hindex (583:9) and hindex (583:7)
   remark #15346: vector dependence: assumed ANTI dependence between hindex (583:7) and hindex (583:9)
   remark #25015: Estimate of max trip count of loop=4
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(586,3) inlined into delta/hull/predicates.cpp(821,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between hindex (591:9) and hindex (591:7)
   remark #15346: vector dependence: assumed ANTI dependence between hindex (591:7) and hindex (591:9)
   remark #25015: Estimate of max trip count of loop=4
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(564,5) inlined into delta/hull/predicates.cpp(821,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(578,3) inlined into delta/hull/predicates.cpp(821,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between hindex (583:9) and hindex (583:7)
   remark #15346: vector dependence: assumed ANTI dependence between hindex (583:7) and hindex (583:9)
   remark #25015: Estimate of max trip count of loop=8
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(586,3) inlined into delta/hull/predicates.cpp(821,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between hindex (591:9) and hindex (591:7)
   remark #15346: vector dependence: assumed ANTI dependence between hindex (591:7) and hindex (591:9)
   remark #25015: Estimate of max trip count of loop=4
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(564,5) inlined into delta/hull/predicates.cpp(821,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(578,3) inlined into delta/hull/predicates.cpp(821,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between hindex (583:9) and hindex (583:7)
   remark #15346: vector dependence: assumed ANTI dependence between hindex (583:7) and hindex (583:9)
   remark #25015: Estimate of max trip count of loop=12
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(586,3) inlined into delta/hull/predicates.cpp(821,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between hindex (591:9) and hindex (591:7)
   remark #15346: vector dependence: assumed ANTI dependence between hindex (591:7) and hindex (591:9)
   remark #25015: Estimate of max trip count of loop=4
LOOP END

    Report from: Code generation optimizations [cg]

delta/hull/predicates.cpp(785,3):remark #34051: REGISTER ALLOCATION : [_ZN5delta4hull8orient2dEPdS1_S1_] delta/hull/predicates.cpp:785

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   23[ rax rdx rcx rsi rdi r8-r9 zmm0-zmm15]
        
    Routine temporaries
        Total         :     312
            Global    :      69
            Local     :     243
        Regenerable   :       6
        Spilled       :      10
        
    Routine stack
        Variables     :     352 bytes*
            Reads     :      23 [2.92e-01 ~ 0.5%]
            Writes    :      34 [7.30e-01 ~ 1.2%]
        Spills        :      80 bytes*
            Reads     :      11 [7.42e-02 ~ 0.1%]
            Writes    :      12 [5.75e-01 ~ 0.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: delta::hull::orient3d(double *, double *, double *, double *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (delta::hull::orient3d(double *, double *, double *, double *)) [4/13=30.8%] delta/hull/predicates.cpp(1261,3)
  -> (1302,12) delta::hull::orient3dadapt(double *, double *, double *, double *, double) (isz = 5249) (sz = 5267)
     [[ Inlining would exceed -inline-max-total-size value (5249>2000) <1>]]


    Report from: Code generation optimizations [cg]

delta/hull/predicates.cpp(1261,3):remark #34051: REGISTER ALLOCATION : [_ZN5delta4hull8orient3dEPdS1_S1_S1_] delta/hull/predicates.cpp:1261

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   19[ rdx rcx rsi rdi zmm0-zmm14]
        
    Routine temporaries
        Total         :      78
            Global    :      15
            Local     :      63
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: delta::hull::orient3dadapt(double *, double *, double *, double *, double)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (delta::hull::orient3dadapt(double *, double *, double *, double *, double)) [5/13=38.5%] delta/hull/predicates.cpp(857,1)
  -> INLINE: (923,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> INLINE: (929,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> INLINE: (935,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> (937,11) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2096>2000) <1>]]
  -> (938,15) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2096>2000) <1>]]
  -> INLINE: (940,9) delta::hull::estimate(int, double *) (isz = 14) (sz = 23)
  -> (1097,12) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2096>2000) <1>]]
  -> INLINE: (1098,13) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> (1099,15) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2096>2000) <1>]]
  -> (1103,12) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2096>2000) <1>]]
  -> INLINE: (1104,13) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> (1105,15) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2096>2000) <1>]]
  -> (1109,12) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2096>2000) <1>]]
  -> INLINE: (1110,13) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> (1111,15) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2096>2000) <1>]]
  -> INLINE: (1116,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> (1117,17) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2096>2000) <1>]]
  -> INLINE: (1122,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> (1123,17) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2096>2000) <1>]]
  -> INLINE: (1128,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> (1129,17) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2096>2000) <1>]]
  -> (1139,19) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2096>2000) <1>]]
  -> (1145,21) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2096>2000) <1>]]
  -> (1155,19) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2096>2000) <1>]]
  -> (1161,21) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2096>2000) <1>]]
  -> (1172,19) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2096>2000) <1>]]
  -> (1178,21) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2096>2000) <1>]]
  -> (1188,19) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2096>2000) <1>]]
  -> (1194,21) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2096>2000) <1>]]
  -> (1205,19) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2096>2000) <1>]]
  -> (1211,21) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2096>2000) <1>]]
  -> (1221,19) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2096>2000) <1>]]
  -> (1227,21) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2096>2000) <1>]]
  -> INLINE: (1235,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> (1236,17) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2096>2000) <1>]]
  -> INLINE: (1241,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> INLINE: (1242,17) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
  -> INLINE: (1247,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> INLINE: (1248,17) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(923,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between adet[hindex] (642:7) and adet[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between adet[hindex] (646:7) and adet[hindex] (642:7)
   remark #25436: completely unrolled by 3  
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(929,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between bdet[hindex] (642:7) and bdet[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between bdet[hindex] (646:7) and bdet[hindex] (642:7)
   remark #25436: completely unrolled by 3  
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(935,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between cdet[hindex] (642:7) and cdet[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between cdet[hindex] (646:7) and cdet[hindex] (642:7)
   remark #25436: completely unrolled by 3  
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(669,3) inlined into delta/hull/predicates.cpp(940,9)
<Peeled loop for vectorization>
   remark #25436: completely unrolled by 1  
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(669,3) inlined into delta/hull/predicates.cpp(940,9)
   remark #15388: vectorization support: reference fin1[eindex] has aligned access   [ delta/hull/predicates.cpp(940,29) ]
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 8
   remark #15309: vectorization support: normalized vectorization overhead 0.396
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 6 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 1.790 
   remark #15488: --- end vector cost summary ---
   remark #25015: Estimate of max trip count of loop=12
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(669,3) inlined into delta/hull/predicates.cpp(940,9)
<Remainder loop for vectorization>
   remark #15388: vectorization support: reference fin1[eindex] has aligned access   [ delta/hull/predicates.cpp(940,29) ]
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 5.800
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #25015: Estimate of max trip count of loop=96
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(669,3) inlined into delta/hull/predicates.cpp(940,9)
<Remainder loop for vectorization>
   remark #25015: Estimate of max trip count of loop=192
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(1098,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between w[hindex] (642:7) and w[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between w[hindex] (646:7) and w[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=8
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(1104,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between w[hindex] (642:7) and w[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between w[hindex] (646:7) and w[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=8
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(1110,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between w[hindex] (642:7) and w[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between w[hindex] (646:7) and w[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=8
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(1116,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between v[hindex] (642:7) and v[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between v[hindex] (646:7) and v[hindex] (642:7)
   remark #25436: completely unrolled by 3  
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(1122,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between v[hindex] (642:7) and v[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between v[hindex] (646:7) and v[hindex] (642:7)
   remark #25436: completely unrolled by 3  
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(1128,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between v[hindex] (642:7) and v[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between v[hindex] (646:7) and v[hindex] (642:7)
   remark #25436: completely unrolled by 3  
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(1235,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between w[hindex] (642:7) and w[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between w[hindex] (646:7) and w[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=8
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(1241,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between w[hindex] (642:7) and w[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between w[hindex] (646:7) and w[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=8
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(564,5) inlined into delta/hull/predicates.cpp(1242,17)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(578,3) inlined into delta/hull/predicates.cpp(1242,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between finnow[eindex] (580:5) and finother[hindex] (583:7)
   remark #15346: vector dependence: assumed FLOW dependence between finother[hindex] (583:7) and finnow[eindex] (580:5)
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(586,3) inlined into delta/hull/predicates.cpp(1242,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between hindex (591:9) and hindex (591:7)
   remark #15346: vector dependence: assumed ANTI dependence between hindex (591:7) and hindex (591:9)
   remark #25015: Estimate of max trip count of loop=16
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(1247,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between w[hindex] (642:7) and w[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between w[hindex] (646:7) and w[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=8
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(564,5) inlined into delta/hull/predicates.cpp(1248,17)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(578,3) inlined into delta/hull/predicates.cpp(1248,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between finnow[eindex] (580:5) and finother[hindex] (583:7)
   remark #15346: vector dependence: assumed FLOW dependence between finother[hindex] (583:7) and finnow[eindex] (580:5)
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(586,3) inlined into delta/hull/predicates.cpp(1248,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between hindex (591:9) and hindex (591:7)
   remark #15346: vector dependence: assumed ANTI dependence between hindex (591:7) and hindex (591:9)
   remark #25015: Estimate of max trip count of loop=16
LOOP END

    Report from: Code generation optimizations [cg]

delta/hull/predicates.cpp(857,1):remark #34051: REGISTER ALLOCATION : [_ZN47_INTERNAL_25_delta_hull_predicates_cpp_de7541245delta4hull13orient3dadaptEPdS2_S2_S2_d] delta/hull/predicates.cpp:857

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   31[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :    1572
            Global    :     367
            Local     :    1205
        Regenerable   :      85
        Spilled       :     105
        
    Routine stack
        Variables     :    4128 bytes*
            Reads     :      41 [5.42e+01 ~ 3.9%]
            Writes    :     186 [6.93e+01 ~ 4.9%]
        Spills        :     792 bytes*
            Reads     :     273 [9.30e+01 ~ 6.6%]
            Writes    :     115 [7.90e+01 ~ 5.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: delta::hull::incircle(double *, double *, double *, double *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (delta::hull::incircle(double *, double *, double *, double *)) [6/13=46.2%] delta/hull/predicates.cpp(1910,3)
  -> (1952,9) delta::hull::incircleadapt(double *, double *, double *, double *, double) (isz = 5973) (sz = 5991)
     [[ Inlining would exceed -inline-max-total-size value (5973>2000) <1>]]


    Report from: Code generation optimizations [cg]

delta/hull/predicates.cpp(1910,3):remark #34051: REGISTER ALLOCATION : [_ZN5delta4hull8incircleEPdS1_S1_S1_] delta/hull/predicates.cpp:1910

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   20[ rdx rcx rsi rdi zmm0-zmm15]
        
    Routine temporaries
        Total         :      77
            Global    :      15
            Local     :      62
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: delta::hull::incircleadapt(double *, double *, double *, double *, double)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (delta::hull::incircleadapt(double *, double *, double *, double *, double)) [7/13=53.8%] delta/hull/predicates.cpp(1335,1)
  -> (1410,13) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1411,14) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1412,13) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1413,14) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1414,10) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1420,13) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1421,14) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1422,13) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1423,14) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1424,10) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1430,13) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1431,14) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1432,13) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1433,14) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1434,10) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1436,11) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1437,15) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> INLINE: (1439,9) delta::hull::estimate(int, double *) (isz = 14) (sz = 23)
  -> (1496,16) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1497,18) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1500,16) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1501,18) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1503,16) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1504,18) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1506,18) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1508,17) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1510,17) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1515,16) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1516,18) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1519,16) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1520,18) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1522,16) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1523,18) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1525,18) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1527,17) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1529,17) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1534,16) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1535,18) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1538,16) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1539,18) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1541,16) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1542,18) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1544,18) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1546,17) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1548,17) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1553,16) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1554,18) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1557,16) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1558,18) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1560,16) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1561,18) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1563,18) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1565,17) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1567,17) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1572,16) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1573,18) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1576,16) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1577,18) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1579,16) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1580,18) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1582,18) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1584,17) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1586,17) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1591,16) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1592,18) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1595,16) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1596,18) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1598,16) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1599,18) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1601,18) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1603,17) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1605,17) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1623,16) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1638,20) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1639,19) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1640,20) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1642,19) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1644,19) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1648,20) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1649,22) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1651,21) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1656,20) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1657,22) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1659,21) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1664,20) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1666,20) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1667,20) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1669,20) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1671,20) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1673,19) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1675,19) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1680,20) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1681,19) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1682,20) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1684,19) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1686,19) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1691,20) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1693,20) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1694,20) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1696,20) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1698,20) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1700,19) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1702,19) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1720,16) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1735,20) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1736,19) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1737,20) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1739,19) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1741,19) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1745,20) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1746,22) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1748,21) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1753,20) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1754,22) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1756,21) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1761,20) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1763,20) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1764,20) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1766,20) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1768,20) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1770,19) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1772,19) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1777,20) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1778,19) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1779,20) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1781,19) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1783,19) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1788,20) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1790,20) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1791,20) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1793,20) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (1795,20) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1797,19) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1799,19) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1817,16) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1832,20) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> INLINE: (1833,19) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> INLINE: (1834,20) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> (1836,19) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1838,19) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> INLINE: (1842,20) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> INLINE: (1843,22) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> (1845,21) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> INLINE: (1850,20) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> INLINE: (1851,22) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> (1853,21) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> INLINE: (1858,20) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> INLINE: (1860,20) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> INLINE: (1861,20) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> INLINE: (1863,20) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> (1865,20) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1867,19) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1869,19) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1874,20) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> INLINE: (1875,19) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> INLINE: (1876,20) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> (1878,19) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1880,19) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> INLINE: (1885,20) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> INLINE: (1887,20) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> INLINE: (1888,20) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> INLINE: (1890,20) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> (1892,20) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1894,19) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (1896,19) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at delta/hull/predicates.cpp(669,3) inlined into delta/hull/predicates.cpp(1439,9)
<Peeled loop for vectorization>
   remark #25436: completely unrolled by 1  
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(669,3) inlined into delta/hull/predicates.cpp(1439,9)
   remark #15388: vectorization support: reference fin1[eindex] has aligned access   [ delta/hull/predicates.cpp(1439,29) ]
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 8
   remark #15309: vectorization support: normalized vectorization overhead 0.396
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 6 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 1.960 
   remark #15488: --- end vector cost summary ---
   remark #25015: Estimate of max trip count of loop=72
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(669,3) inlined into delta/hull/predicates.cpp(1439,9)
<Remainder loop for vectorization>
   remark #15388: vectorization support: reference fin1[eindex] has aligned access   [ delta/hull/predicates.cpp(1439,29) ]
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 5.800
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #25015: Estimate of max trip count of loop=576
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(669,3) inlined into delta/hull/predicates.cpp(1439,9)
<Remainder loop for vectorization>
   remark #25015: Estimate of max trip count of loop=1152
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(1833,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between cxtabt[hindex] (642:7) and cxtabt[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between cxtabt[hindex] (646:7) and cxtabt[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=8
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(1834,20)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between temp32a[hindex] (642:7) and temp32a[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between temp32a[hindex] (646:7) and temp32a[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=16
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(1842,20)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between temp8[hindex] (642:7) and temp8[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between temp8[hindex] (646:7) and temp8[hindex] (642:7)
   remark #25436: completely unrolled by 3  
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(1843,22)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between temp16a[hindex] (642:7) and temp16a[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between temp16a[hindex] (646:7) and temp16a[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=8
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(1850,20)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between temp8[hindex] (642:7) and temp8[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between temp8[hindex] (646:7) and temp8[hindex] (642:7)
   remark #25436: completely unrolled by 3  
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(1851,22)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between temp16a[hindex] (642:7) and temp16a[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between temp16a[hindex] (646:7) and temp16a[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=8
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(1858,20)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between temp32a[hindex] (642:7) and temp32a[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between temp32a[hindex] (646:7) and temp32a[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=16
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(1860,20)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between cxtabtt[hindex] (642:7) and cxtabtt[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between cxtabtt[hindex] (646:7) and cxtabtt[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=4
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(1861,20)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between temp16a[hindex] (642:7) and temp16a[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between temp16a[hindex] (646:7) and temp16a[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=8
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(1863,20)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between temp16b[hindex] (642:7) and temp16b[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between temp16b[hindex] (646:7) and temp16b[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=8
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(1875,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between cytabt[hindex] (642:7) and cytabt[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between cytabt[hindex] (646:7) and cytabt[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=8
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(1876,20)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between temp32a[hindex] (642:7) and temp32a[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between temp32a[hindex] (646:7) and temp32a[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=16
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(1885,20)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between temp32a[hindex] (642:7) and temp32a[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between temp32a[hindex] (646:7) and temp32a[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=16
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(1887,20)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between cytabtt[hindex] (642:7) and cytabtt[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between cytabtt[hindex] (646:7) and cytabtt[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=4
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(1888,20)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between temp16a[hindex] (642:7) and temp16a[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between temp16a[hindex] (646:7) and temp16a[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=8
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(1890,20)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between temp16b[hindex] (642:7) and temp16b[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between temp16b[hindex] (646:7) and temp16b[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=8
LOOP END

    Report from: Code generation optimizations [cg]

delta/hull/predicates.cpp(1335,1):remark #34051: REGISTER ALLOCATION : [_ZN47_INTERNAL_25_delta_hull_predicates_cpp_de7541245delta4hull13incircleadaptEPdS2_S2_S2_d] delta/hull/predicates.cpp:1335

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   28[ rax rdx rcx rbx rbp rsi rdi r8 r12-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :    2225
            Global    :     659
            Local     :    1566
        Regenerable   :     509
        Spilled       :     127
        
    Routine stack
        Variables     :   25568 bytes*
            Reads     :      40 [5.45e+01 ~ 4.1%]
            Writes    :     138 [4.67e+01 ~ 3.5%]
        Spills        :     968 bytes*
            Reads     :     401 [1.10e+02 ~ 8.4%]
            Writes    :     149 [6.74e+01 ~ 5.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *)) [8/13=61.5%] delta/hull/predicates.cpp(532,1)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at delta/hull/predicates.cpp(564,5)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(578,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between e[eindex] (580:5) and h[hindex] (583:7)
   remark #15346: vector dependence: assumed FLOW dependence between h[hindex] (583:7) and e[eindex] (580:5)
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(586,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between f[findex] (588:5) and h[hindex] (591:7)
   remark #15346: vector dependence: assumed FLOW dependence between h[hindex] (591:7) and f[findex] (588:5)
LOOP END

    Report from: Code generation optimizations [cg]

delta/hull/predicates.cpp(532,1):remark #34051: REGISTER ALLOCATION : [_ZN47_INTERNAL_25_delta_hull_predicates_cpp_de7541245delta4hull27fast_expansion_sum_zeroelimEiPdiS2_S2_] delta/hull/predicates.cpp:532

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rsi rdi r8-r12 zmm0-zmm5]
        
    Routine temporaries
        Total         :      62
            Global    :      26
            Local     :      36
        Regenerable   :       9
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: delta::hull::scale_expansion_zeroelim(int, double *, double, double *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (delta::hull::scale_expansion_zeroelim(int, double *, double, double *)) [9/13=69.2%] delta/hull/predicates.cpp(617,1)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at delta/hull/predicates.cpp(637,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between e[eindex] (638:5) and h[hindex] (646:7)
   remark #15346: vector dependence: assumed FLOW dependence between h[hindex] (646:7) and e[eindex] (638:5)
LOOP END

    Report from: Code generation optimizations [cg]

delta/hull/predicates.cpp(617,1):remark #34051: REGISTER ALLOCATION : [_ZN47_INTERNAL_25_delta_hull_predicates_cpp_de7541245delta4hull24scale_expansion_zeroelimEiPddS2_] delta/hull/predicates.cpp:617

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rsi rdi zmm0-zmm7]
        
    Routine temporaries
        Total         :      43
            Global    :      20
            Local     :      23
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: delta::hull::insphere(double *, double *, double *, double *, double *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (delta::hull::insphere(double *, double *, double *, double *, double *)) [10/13=76.9%] delta/hull/predicates.cpp(2451,83)
  -> (2553,9) delta::hull::insphereadapt(double *, double *, double *, double *, double *, double) (isz = 3783) (sz = 3803)
     [[ Inlining would exceed -inline-max-total-size value (3783>2000) <1>]]


    Report from: Code generation optimizations [cg]

delta/hull/predicates.cpp(2451,83):remark #34051: REGISTER ALLOCATION : [_ZN5delta4hull8insphereEPdS1_S1_S1_S1_] delta/hull/predicates.cpp:2451

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   21[ rdx rcx rsi rdi r8 zmm0-zmm15]
        
    Routine temporaries
        Total         :     170
            Global    :      16
            Local     :     154
        Regenerable   :       0
        Spilled       :       7
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      56 bytes*
            Reads     :       7 [7.00e+00 ~ 3.4%]
            Writes    :       7 [7.00e+00 ~ 3.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: delta::hull::insphereadapt(double *, double *, double *, double *, double *, double)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (delta::hull::insphereadapt(double *, double *, double *, double *, double *, double)) [11/13=84.6%] delta/hull/predicates.cpp(2238,1)
  -> (2318,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (2319,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (2320,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (2321,15) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (2323,15) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (2325,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (2326,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (2327,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (2328,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (2329,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (2330,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (2331,11) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (2332,10) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (2334,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (2335,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (2336,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (2337,15) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (2339,15) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (2341,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (2342,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (2343,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (2344,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (2345,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (2346,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (2347,11) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (2348,10) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (2350,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> (2351,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2088>2000) <1>]]
  -> INLINE: (2352,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> (2353,15) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (2355,15) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> INLINE: (2357,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> INLINE: (2358,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> INLINE: (2359,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> INLINE: (2360,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> INLINE: (2361,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> INLINE: (2362,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> (2363,11) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (2364,10) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> INLINE: (2366,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> INLINE: (2367,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> INLINE: (2368,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> (2369,15) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (2371,15) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> INLINE: (2373,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> INLINE: (2374,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> INLINE: (2375,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> INLINE: (2376,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> INLINE: (2377,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> INLINE: (2378,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> (2379,11) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (2380,10) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (2382,11) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (2383,11) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> (2384,15) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2172>2000) <1>]]
  -> INLINE: (2386,9) delta::hull::estimate(int, double *) (isz = 14) (sz = 23)
  -> (2448,10) delta::hull::insphereexact(double *, double *, double *, double *, double *) (isz = 4859) (sz = 4874)
     [[ Inlining would exceed -inline-max-size value (4874>253) <2>]]


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(2352,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between temp8c[hindex] (642:7) and temp8c[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between temp8c[hindex] (646:7) and temp8c[hindex] (642:7)
   remark #25436: completely unrolled by 3  
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(2357,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between temp48[hindex] (642:7) and temp48[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between temp48[hindex] (646:7) and temp48[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=24
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(2358,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between xdet[hindex] (642:7) and xdet[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between xdet[hindex] (646:7) and xdet[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=48
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(2359,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between temp48[hindex] (642:7) and temp48[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between temp48[hindex] (646:7) and temp48[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=24
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(2360,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between ydet[hindex] (642:7) and ydet[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between ydet[hindex] (646:7) and ydet[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=48
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(2361,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between temp48[hindex] (642:7) and temp48[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between temp48[hindex] (646:7) and temp48[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=24
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(2362,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between zdet[hindex] (642:7) and zdet[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between zdet[hindex] (646:7) and zdet[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=48
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(2366,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between temp8a[hindex] (642:7) and temp8a[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between temp8a[hindex] (646:7) and temp8a[hindex] (642:7)
   remark #25436: completely unrolled by 3  
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(2367,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between temp8b[hindex] (642:7) and temp8b[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between temp8b[hindex] (646:7) and temp8b[hindex] (642:7)
   remark #25436: completely unrolled by 3  
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(2368,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between temp8c[hindex] (642:7) and temp8c[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between temp8c[hindex] (646:7) and temp8c[hindex] (642:7)
   remark #25436: completely unrolled by 3  
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(2373,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between temp48[hindex] (642:7) and temp48[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between temp48[hindex] (646:7) and temp48[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=24
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(2374,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between xdet[hindex] (642:7) and xdet[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between xdet[hindex] (646:7) and xdet[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=48
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(2375,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between temp48[hindex] (642:7) and temp48[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between temp48[hindex] (646:7) and temp48[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=24
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(2376,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between ydet[hindex] (642:7) and ydet[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between ydet[hindex] (646:7) and ydet[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=48
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(2377,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between temp48[hindex] (642:7) and temp48[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between temp48[hindex] (646:7) and temp48[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=24
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(2378,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between zdet[hindex] (642:7) and zdet[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between zdet[hindex] (646:7) and zdet[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=48
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(669,3) inlined into delta/hull/predicates.cpp(2386,9)
<Peeled loop for vectorization>
   remark #25436: completely unrolled by 1  
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(669,3) inlined into delta/hull/predicates.cpp(2386,9)
   remark #15388: vectorization support: reference fin1[eindex] has aligned access   [ delta/hull/predicates.cpp(2386,29) ]
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 8
   remark #15309: vectorization support: normalized vectorization overhead 0.396
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 6 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 1.960 
   remark #15488: --- end vector cost summary ---
   remark #25015: Estimate of max trip count of loop=72
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(669,3) inlined into delta/hull/predicates.cpp(2386,9)
<Remainder loop for vectorization>
   remark #15388: vectorization support: reference fin1[eindex] has aligned access   [ delta/hull/predicates.cpp(2386,29) ]
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 5.800
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #25015: Estimate of max trip count of loop=576
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(669,3) inlined into delta/hull/predicates.cpp(2386,9)
<Remainder loop for vectorization>
   remark #25015: Estimate of max trip count of loop=1152
LOOP END

    Report from: Code generation optimizations [cg]

delta/hull/predicates.cpp(2238,1):remark #34051: REGISTER ALLOCATION : [_ZN47_INTERNAL_25_delta_hull_predicates_cpp_de7541245delta4hull13insphereadaptEPdS2_S2_S2_S2_d] delta/hull/predicates.cpp:2238

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   31[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :    1203
            Global    :     363
            Local     :     840
        Regenerable   :     132
        Spilled       :      76
        
    Routine stack
        Variables     :   32576 bytes*
            Reads     :      39 [1.25e+02 ~ 3.7%]
            Writes    :     104 [1.81e+02 ~ 5.4%]
        Spills        :     560 bytes*
            Reads     :     172 [1.43e+02 ~ 4.2%]
            Writes    :      83 [7.61e+01 ~ 2.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: delta::hull::insphereexact(double *, double *, double *, double *, double *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (delta::hull::insphereexact(double *, double *, double *, double *, double *)) [12/13=92.3%] delta/hull/predicates.cpp(1985,1)
  -> (2068,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2074>2000) <1>]]
  -> (2069,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2074>2000) <1>]]
  -> (2070,15) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2072,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2074>2000) <1>]]
  -> (2073,12) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2076,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2074>2000) <1>]]
  -> (2077,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2074>2000) <1>]]
  -> (2078,15) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2080,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2074>2000) <1>]]
  -> (2081,12) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2084,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2074>2000) <1>]]
  -> (2085,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2074>2000) <1>]]
  -> (2086,15) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2088,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2074>2000) <1>]]
  -> (2089,12) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2092,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2074>2000) <1>]]
  -> (2093,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2074>2000) <1>]]
  -> (2094,15) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2096,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2074>2000) <1>]]
  -> (2097,12) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2100,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2074>2000) <1>]]
  -> (2101,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2074>2000) <1>]]
  -> (2102,15) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2104,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2074>2000) <1>]]
  -> (2105,12) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2108,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2074>2000) <1>]]
  -> (2109,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2074>2000) <1>]]
  -> (2110,15) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2112,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2074>2000) <1>]]
  -> (2113,12) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2116,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2074>2000) <1>]]
  -> (2117,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2074>2000) <1>]]
  -> (2118,15) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2120,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2074>2000) <1>]]
  -> (2121,12) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2124,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2074>2000) <1>]]
  -> (2125,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2074>2000) <1>]]
  -> (2126,15) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2128,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2074>2000) <1>]]
  -> (2129,12) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2132,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2074>2000) <1>]]
  -> (2133,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2074>2000) <1>]]
  -> (2134,15) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2136,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2074>2000) <1>]]
  -> (2137,12) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2140,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2074>2000) <1>]]
  -> (2141,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2074>2000) <1>]]
  -> (2142,15) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2144,15) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2074>2000) <1>]]
  -> (2145,12) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2148,16) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2149,16) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2153,13) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2155,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2074>2000) <1>]]
  -> (2156,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2074>2000) <1>]]
  -> (2157,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2074>2000) <1>]]
  -> (2158,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2074>2000) <1>]]
  -> (2159,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2074>2000) <1>]]
  -> (2160,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2074>2000) <1>]]
  -> (2161,11) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2162,10) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2164,16) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2165,16) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2169,13) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2171,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2074>2000) <1>]]
  -> (2172,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2074>2000) <1>]]
  -> (2173,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2074>2000) <1>]]
  -> (2174,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2074>2000) <1>]]
  -> (2175,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2074>2000) <1>]]
  -> (2176,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2074>2000) <1>]]
  -> (2177,11) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2178,10) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2180,16) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2181,16) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2185,13) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2187,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2074>2000) <1>]]
  -> (2188,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
     [[ Inlining would exceed -inline-max-total-size value (2074>2000) <1>]]
  -> INLINE: (2189,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> INLINE: (2190,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> INLINE: (2191,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> INLINE: (2192,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> (2193,11) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2194,10) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2196,16) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2197,16) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2201,13) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> INLINE: (2203,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> INLINE: (2204,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> INLINE: (2205,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> INLINE: (2206,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> INLINE: (2207,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> INLINE: (2208,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> (2209,11) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2210,10) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2212,16) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2213,16) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2217,13) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> INLINE: (2219,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> INLINE: (2220,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> INLINE: (2221,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> INLINE: (2222,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> INLINE: (2223,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> INLINE: (2224,10) delta::hull::scale_expansion_zeroelim(int, double *, double, double *) (isz = 122) (sz = 135)
  -> (2225,11) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2226,10) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2228,11) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2229,11) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2230,12) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]
  -> (2231,14) delta::hull::fast_expansion_sum_zeroelim(int, double *, int, double *, double *) (isz = 206) (sz = 221)
     [[ Inlining would exceed -inline-max-total-size value (2158>2000) <1>]]


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at delta/hull/predicates.cpp(2150,3)
   remark #15388: vectorization support: reference temp48b[i] has aligned access   [ delta/hull/predicates.cpp(2151,5) ]
   remark #15388: vectorization support: reference temp48b[i] has aligned access   [ delta/hull/predicates.cpp(2151,19) ]
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 2.000 
   remark #15478: estimated potential speedup: 2.500 
   remark #15488: --- end vector cost summary ---
   remark #25015: Estimate of max trip count of loop=6
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(2150,3)
<Remainder loop for vectorization>
   remark #15388: vectorization support: reference temp48b[i] has aligned access   [ delta/hull/predicates.cpp(2151,5) ]
   remark #15388: vectorization support: reference temp48b[i] has aligned access   [ delta/hull/predicates.cpp(2151,19) ]
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 2.500
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #25015: Estimate of max trip count of loop=24
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(2150,3)
<Remainder loop for vectorization>
   remark #25015: Estimate of max trip count of loop=48
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(2166,3)
   remark #15388: vectorization support: reference temp48b[i] has aligned access   [ delta/hull/predicates.cpp(2167,5) ]
   remark #15388: vectorization support: reference temp48b[i] has aligned access   [ delta/hull/predicates.cpp(2167,19) ]
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 2.000 
   remark #15478: estimated potential speedup: 2.500 
   remark #15488: --- end vector cost summary ---
   remark #25015: Estimate of max trip count of loop=6
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(2166,3)
<Remainder loop for vectorization>
   remark #15388: vectorization support: reference temp48b[i] has aligned access   [ delta/hull/predicates.cpp(2167,5) ]
   remark #15388: vectorization support: reference temp48b[i] has aligned access   [ delta/hull/predicates.cpp(2167,19) ]
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 2.500
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #25015: Estimate of max trip count of loop=24
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(2166,3)
<Remainder loop for vectorization>
   remark #25015: Estimate of max trip count of loop=48
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(2182,3)
   remark #15388: vectorization support: reference temp48b[i] has aligned access   [ delta/hull/predicates.cpp(2183,5) ]
   remark #15388: vectorization support: reference temp48b[i] has aligned access   [ delta/hull/predicates.cpp(2183,19) ]
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 2.000 
   remark #15478: estimated potential speedup: 2.500 
   remark #15488: --- end vector cost summary ---
   remark #25015: Estimate of max trip count of loop=6
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(2182,3)
<Remainder loop for vectorization>
   remark #15388: vectorization support: reference temp48b[i] has aligned access   [ delta/hull/predicates.cpp(2183,5) ]
   remark #15388: vectorization support: reference temp48b[i] has aligned access   [ delta/hull/predicates.cpp(2183,19) ]
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 2.500
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #25015: Estimate of max trip count of loop=24
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(2182,3)
<Remainder loop for vectorization>
   remark #25015: Estimate of max trip count of loop=48
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(2189,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between temp192[hindex] (642:7) and temp192[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between temp192[hindex] (646:7) and temp192[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=96
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(2190,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between det384y[hindex] (642:7) and det384y[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between det384y[hindex] (646:7) and det384y[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=192
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(2191,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between temp192[hindex] (642:7) and temp192[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between temp192[hindex] (646:7) and temp192[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=96
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(2192,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between det384z[hindex] (642:7) and det384z[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between det384z[hindex] (646:7) and det384z[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=192
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(2198,3)
   remark #15388: vectorization support: reference temp48b[i] has aligned access   [ delta/hull/predicates.cpp(2199,5) ]
   remark #15388: vectorization support: reference temp48b[i] has aligned access   [ delta/hull/predicates.cpp(2199,19) ]
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 2.000 
   remark #15478: estimated potential speedup: 2.500 
   remark #15488: --- end vector cost summary ---
   remark #25015: Estimate of max trip count of loop=6
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(2198,3)
<Remainder loop for vectorization>
   remark #15388: vectorization support: reference temp48b[i] has aligned access   [ delta/hull/predicates.cpp(2199,5) ]
   remark #15388: vectorization support: reference temp48b[i] has aligned access   [ delta/hull/predicates.cpp(2199,19) ]
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 2.500
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #25015: Estimate of max trip count of loop=24
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(2198,3)
<Remainder loop for vectorization>
   remark #25015: Estimate of max trip count of loop=48
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(2203,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between temp192[hindex] (642:7) and temp192[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between temp192[hindex] (646:7) and temp192[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=96
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(2204,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between det384x[hindex] (642:7) and det384x[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between det384x[hindex] (646:7) and det384x[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=192
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(2205,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between temp192[hindex] (642:7) and temp192[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between temp192[hindex] (646:7) and temp192[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=96
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(2206,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between det384y[hindex] (642:7) and det384y[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between det384y[hindex] (646:7) and det384y[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=192
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(2207,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between temp192[hindex] (642:7) and temp192[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between temp192[hindex] (646:7) and temp192[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=96
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(2208,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between det384z[hindex] (642:7) and det384z[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between det384z[hindex] (646:7) and det384z[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=192
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(2214,3)
   remark #15388: vectorization support: reference temp48b[i] has aligned access   [ delta/hull/predicates.cpp(2215,5) ]
   remark #15388: vectorization support: reference temp48b[i] has aligned access   [ delta/hull/predicates.cpp(2215,19) ]
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 2.000 
   remark #15478: estimated potential speedup: 2.500 
   remark #15488: --- end vector cost summary ---
   remark #25015: Estimate of max trip count of loop=6
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(2214,3)
<Remainder loop for vectorization>
   remark #15388: vectorization support: reference temp48b[i] has aligned access   [ delta/hull/predicates.cpp(2215,5) ]
   remark #15388: vectorization support: reference temp48b[i] has aligned access   [ delta/hull/predicates.cpp(2215,19) ]
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 2.500
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #25015: Estimate of max trip count of loop=24
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(2214,3)
<Remainder loop for vectorization>
   remark #25015: Estimate of max trip count of loop=48
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(2219,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between temp192[hindex] (642:7) and temp192[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between temp192[hindex] (646:7) and temp192[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=96
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(2220,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between det384x[hindex] (642:7) and det384x[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between det384x[hindex] (646:7) and det384x[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=192
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(2221,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between temp192[hindex] (642:7) and temp192[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between temp192[hindex] (646:7) and temp192[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=96
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(2222,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between det384y[hindex] (642:7) and det384y[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between det384y[hindex] (646:7) and det384y[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=192
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(2223,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between temp192[hindex] (642:7) and temp192[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between temp192[hindex] (646:7) and temp192[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=96
LOOP END

LOOP BEGIN at delta/hull/predicates.cpp(637,3) inlined into delta/hull/predicates.cpp(2224,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between det384z[hindex] (642:7) and det384z[hindex] (646:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between det384z[hindex] (646:7) and det384z[hindex] (642:7)
   remark #25015: Estimate of max trip count of loop=192
LOOP END

    Report from: Code generation optimizations [cg]

delta/hull/predicates.cpp(1985,1):remark #34051: REGISTER ALLOCATION : [_ZN47_INTERNAL_25_delta_hull_predicates_cpp_de7541245delta4hull13insphereexactEPdS2_S2_S2_S2_] delta/hull/predicates.cpp:1985

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rbp rsi rdi r8-r10 r12-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :    1448
            Global    :     444
            Local     :    1004
        Regenerable   :     312
        Spilled       :      45
        
    Routine stack
        Variables     :   180672 bytes*
            Reads     :      48 [9.56e+02 ~ 9.6%]
            Writes    :     124 [1.06e+03 ~ 10.7%]
        Spills        :     312 bytes*
            Reads     :     115 [1.13e+02 ~ 1.1%]
            Writes    :      45 [4.50e+01 ~ 0.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: delta::hull::exactinit()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (delta::hull::exactinit()) [13/13=100.0%] delta/hull/predicates.cpp(469,1)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at delta/hull/predicates.cpp(480,3)
   remark #15523: loop was not vectorized: loop control variable every_other was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

delta/hull/predicates.cpp(469,1):remark #34051: REGISTER ALLOCATION : [_ZN5delta4hull9exactinitEv] delta/hull/predicates.cpp:469

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   17[ rax zmm0-zmm15]
        
    Routine temporaries
        Total         :      73
            Global    :      15
            Local     :      58
        Regenerable   :      17
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

    Report from: Interprocedural optimizations [ipo]

INLINING FOOTNOTES:

<1> Inlining this function at this call site would increase the size of the 
    caller more than is currently acceptable. Use the option 
    -inline-max-total-size to increase the size that all functions can 
    grow through inlining, add "#pragma optimization_parameter 
    inline_max_total_size" to the caller, add "inline 
    __attribute__((always_inline))" to the declaration of the called 
    function, or add "#pragma forceinline" before the call site.

<2> The function is larger than the inliner would normally inline.  Use the
    option -inline-max-size to increase the size of any function that would
    normally be inlined, add "inline __attribute__((always_inline))" to the
    declaration of the called function, or add "#pragma forceinline" before
    the call site.

